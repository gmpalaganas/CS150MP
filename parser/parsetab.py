
# /home/genesis/Documents/Code/150/CS150MP/parser/parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.5'

_lr_method = 'LALR'

_lr_signature = '7819FFB829987292573EF9D8C3F2A40B'
    
_lr_action_items = {'DO':([43,85,87,88,90,91,95,97,107,108,109,112,114,115,138,143,144,145,148,152,154,159,162,163,165,176,183,184,188,190,193,204,206,207,208,210,215,216,218,223,225,227,228,230,231,233,234,235,236,],[112,-33,-36,-48,-38,112,-32,-34,-49,-9,-37,112,-35,112,-8,-47,-10,112,112,-59,112,-60,-50,-46,-44,-45,-41,-61,-43,112,-40,-39,112,-42,112,112,-56,-55,-120,-51,-54,-58,112,112,-52,-57,112,-120,-53,]),'RETURN':([43,85,87,88,90,91,95,97,107,108,109,112,114,115,138,143,144,145,148,152,154,159,162,163,165,176,183,184,188,190,193,204,206,207,208,210,215,216,218,223,225,227,228,230,231,233,234,235,236,],[94,-33,-36,-48,-38,94,-32,-34,-49,-9,-37,94,-35,94,-8,-47,-10,94,94,-59,94,-60,-50,-46,-44,-45,-41,-61,-43,94,-40,-39,94,-42,94,94,-56,-55,-120,-51,-54,-58,94,94,-52,-57,94,-120,-53,]),'LPAREN':([0,1,2,3,4,5,7,9,11,12,13,14,15,17,18,19,21,22,23,24,25,26,27,28,29,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,56,57,58,59,60,61,62,63,64,65,66,67,69,70,71,72,73,74,75,76,77,78,79,80,81,82,85,87,88,90,91,94,95,96,97,98,102,104,105,106,107,108,109,112,113,114,115,116,119,122,123,124,125,127,128,129,131,132,133,134,137,138,143,144,145,146,147,148,150,151,152,154,155,158,159,162,163,164,165,166,167,168,169,174,176,182,183,184,188,190,192,193,196,200,204,205,206,207,208,209,210,212,215,216,218,221,223,224,225,227,228,229,230,231,233,234,235,236,],[2,-108,2,-93,2,-78,-118,47,-82,-7,-119,-6,-73,2,-90,-102,-85,-80,2,-116,2,-117,-66,2,2,2,2,2,2,2,2,-99,2,2,83,2,102,-26,-27,2,2,-107,-106,2,2,2,2,2,2,2,2,-113,-112,-114,-115,130,2,2,2,2,-93,-100,-101,-98,-109,2,-72,-70,-71,-67,-69,-68,-81,-79,-33,-36,-48,-38,102,2,-32,150,-34,151,102,155,2,158,-49,-9,-37,2,161,-35,2,164,-105,-87,-86,-89,-88,-94,-96,-95,-92,-91,-83,-84,174,-8,-47,-10,2,2,2,2,2,2,-59,2,2,2,-60,-50,-46,2,-44,-103,-104,2,2,174,-45,2,-41,-61,-43,2,209,-40,-74,-5,-39,2,2,-42,2,2,2,2,-56,-55,-120,2,-51,229,-54,-58,2,2,2,-52,-57,2,-120,-53,]),'SCAN':([43,85,87,88,90,91,95,97,107,108,109,112,114,115,138,143,144,145,148,152,154,159,162,163,165,176,183,184,188,190,193,204,206,207,208,210,215,216,218,223,225,227,228,230,231,233,234,235,236,],[113,-33,-36,-48,-38,113,-32,-34,-49,-9,-37,113,-35,113,-8,-47,-10,113,113,-59,113,-60,-50,-46,-44,-45,-41,-61,-43,113,-40,-39,113,-42,113,113,-56,-55,-120,-51,-54,-58,113,113,-52,-57,113,-120,-53,]),'DEFAULT':([43,85,87,88,90,91,95,97,107,108,109,112,114,115,138,143,144,145,148,152,154,159,162,163,165,176,183,184,188,190,193,204,206,207,208,210,215,216,218,223,225,227,228,230,231,233,234,235,236,],[103,-33,-36,-48,-38,103,-32,-34,-49,-9,-37,103,-35,103,-8,-47,-10,103,103,-59,103,-60,-50,-46,-44,-45,-41,-61,-43,103,-40,-39,103,-42,103,103,-56,-55,-120,-51,-54,-58,103,103,-52,-57,103,-120,-53,]),'DIV_OP':([1,3,5,7,9,11,13,18,19,21,22,24,26,38,48,49,69,70,71,72,73,81,82,119,122,123,124,125,127,128,129,131,132,133,134,166,167,],[-108,-93,-78,-118,-97,-82,-119,58,-102,-85,-80,-116,-117,-99,-107,-106,-93,-100,-101,-98,-109,-81,-79,-105,-87,-86,-89,-88,-94,-96,-95,58,58,-83,-84,-103,-104,]),'LBRACKET':([1,7,9,13,19,24,26,48,49,73,92,119,139,140,141,142,153,166,167,187,201,],[-108,-118,46,-119,-102,-116,-117,-107,-106,-109,146,-105,-18,-16,-17,-15,146,-103,-104,-19,-20,]),'COND_OP':([1,3,5,7,9,11,13,15,18,19,21,22,24,26,38,48,49,69,70,71,72,73,81,82,119,122,123,124,125,127,128,129,131,132,133,134,166,167,],[-108,-93,-78,-118,-97,-82,-119,54,-90,-102,-85,-80,-116,-117,-99,-107,-106,-93,-100,-101,-98,-109,-81,-79,-105,-87,-86,-89,-88,-94,-96,-95,-92,-91,-83,-84,-103,-104,]),'WHILE':([43,85,87,88,90,91,95,97,107,108,109,112,114,115,138,143,144,145,148,152,154,159,160,162,163,165,176,183,184,188,190,193,204,206,207,208,210,215,216,218,223,225,227,228,230,231,233,234,235,236,],[104,-33,-36,-48,-38,104,-32,-34,-49,-9,-37,104,-35,104,-8,-47,-10,104,104,-59,104,-60,192,-50,-46,-44,-45,-41,-61,-43,104,-40,-39,104,-42,104,104,-56,-55,-120,-51,-54,-58,104,104,-52,-57,104,-120,-53,]),'DIV_ASSIGN':([1,3,5,7,9,11,13,18,19,21,22,24,26,38,48,49,69,70,71,72,73,81,82,119,122,123,124,125,127,128,129,131,132,133,134,166,167,],[-108,34,-78,-118,-97,-82,-119,-90,-102,-85,-80,-116,-117,-99,-107,-106,-93,-100,-101,-98,-109,-81,-79,-105,-87,-86,-89,-88,-94,-96,-95,-92,-91,-83,-84,-103,-104,]),'PRINT':([43,85,87,88,90,91,95,97,107,108,109,112,114,115,138,143,144,145,148,152,154,159,162,163,165,176,183,184,188,190,193,204,206,207,208,210,215,216,218,223,225,227,228,230,231,233,234,235,236,],[96,-33,-36,-48,-38,96,-32,-34,-49,-9,-37,96,-35,96,-8,-47,-10,96,96,-59,96,-60,-50,-46,-44,-45,-41,-61,-43,96,-40,-39,96,-42,96,96,-56,-55,-120,-51,-54,-58,96,96,-52,-57,96,-120,-53,]),'DEC':([0,1,2,3,4,5,7,9,11,12,13,14,15,17,18,19,21,22,23,24,25,26,27,28,29,32,33,34,35,36,37,38,39,40,42,43,44,45,46,47,48,49,50,51,52,53,54,56,57,58,64,65,66,67,69,70,71,72,73,74,75,76,77,78,79,80,81,82,85,87,88,90,91,94,95,97,102,105,107,108,109,112,114,115,119,122,123,124,125,127,128,129,131,132,133,134,138,143,144,145,146,147,148,151,152,154,155,158,159,162,163,164,165,166,167,168,169,176,182,183,184,188,190,193,196,200,204,205,206,207,208,209,210,212,215,216,218,221,223,225,227,228,229,230,231,233,234,235,236,],[4,-108,4,-93,4,-78,-118,48,-82,-7,-119,-6,-73,4,-90,-102,-85,-80,4,-116,4,-117,-66,4,4,4,4,4,4,4,4,-99,4,4,4,4,-26,-27,4,4,-107,-106,4,4,4,4,4,4,4,4,4,4,4,4,-93,-100,-101,-98,-109,4,-72,-70,-71,-67,-69,-68,-81,-79,-33,-36,-48,-38,4,4,-32,-34,4,4,-49,-9,-37,4,-35,4,-105,-87,-86,-89,-88,-94,-96,-95,-92,-91,-83,-84,-8,-47,-10,4,4,4,4,4,-59,4,4,4,-60,-50,-46,4,-44,-103,-104,4,4,-45,4,-41,-61,-43,4,-40,-74,-5,-39,4,4,-42,4,4,4,4,-56,-55,-120,4,-51,-54,-58,4,4,4,-52,-57,4,-120,-53,]),'COMMA':([1,3,5,7,9,11,13,15,18,19,21,22,24,26,27,30,31,38,48,49,59,60,61,62,69,70,71,72,73,75,76,77,78,79,80,81,82,86,92,99,101,118,119,120,121,122,123,124,125,126,127,128,129,131,132,133,134,135,139,140,141,142,166,167,171,175,180,181,187,189,191,194,195,196,201,202,203,213,217,219,220,232,],[-108,-93,-78,-118,-97,-82,-119,-73,-90,-102,-85,-80,-116,-117,-66,-64,74,-99,-107,-106,-113,-112,-114,-115,-93,-100,-101,-98,-109,-72,-70,-71,-67,-69,-68,-81,-79,137,-13,-11,74,74,-105,-110,168,-87,-86,-89,-88,74,-94,-96,-95,-92,-91,-83,-84,-65,-18,-16,-17,-15,-103,-104,198,-12,-14,-21,-19,74,74,74,-111,-74,-20,-24,212,-22,74,-25,-23,74,]),'NEQ':([1,3,5,7,9,11,13,18,19,21,22,24,26,38,48,49,69,70,71,72,73,81,82,119,122,123,124,125,127,128,129,131,132,133,134,166,167,],[-108,-93,-78,-118,-97,-82,-119,-90,-102,-85,67,-116,-117,-99,-107,-106,-93,-100,-101,-98,-109,67,-79,-105,-87,-86,-89,-88,-94,-96,-95,-92,-91,-83,-84,-103,-104,]),'FLOAT_ID':([20,43,85,87,88,89,90,91,95,97,107,108,109,112,114,115,130,138,143,144,145,148,152,154,159,162,163,165,176,183,184,188,190,193,198,204,206,207,208,210,215,216,218,223,225,227,228,230,231,233,234,235,236,],[60,60,-33,-36,-48,142,-38,60,-32,-34,-49,-9,-37,60,-35,60,60,-8,-47,-10,60,60,-59,60,-60,-50,-46,-44,-45,-41,-61,-43,60,-40,60,-39,60,-42,60,60,-56,-55,-120,-51,-54,-58,60,60,-52,-57,60,-120,-53,]),'CHAR_LIT':([0,1,2,3,4,5,7,9,11,12,13,14,15,17,18,19,21,22,23,24,25,26,27,28,29,32,33,34,35,36,37,38,39,40,42,43,44,45,46,47,48,49,50,51,52,53,54,56,57,58,64,65,66,67,69,70,71,72,73,74,75,76,77,78,79,80,81,82,85,87,88,90,91,94,95,97,102,105,107,108,109,112,114,115,119,122,123,124,125,127,128,129,131,132,133,134,138,143,144,145,146,147,148,150,151,152,154,155,158,159,162,163,164,165,166,167,168,169,176,182,183,184,188,190,193,196,200,204,205,206,207,208,209,210,212,215,216,218,221,223,225,227,228,229,230,231,233,234,235,236,],[7,-108,7,-93,7,-78,-118,-97,-82,-7,-119,-6,-73,7,-90,-102,-85,-80,7,-116,7,-117,-66,7,7,7,7,7,7,7,7,-99,7,7,7,7,-26,-27,7,7,-107,-106,7,7,7,7,7,7,7,7,7,7,7,7,-93,-100,-101,-98,-109,7,-72,-70,-71,-67,-69,-68,-81,-79,-33,-36,-48,-38,7,7,-32,-34,7,7,-49,-9,-37,7,-35,7,-105,-87,-86,-89,-88,-94,-96,-95,-92,-91,-83,-84,-8,-47,-10,7,7,7,7,7,7,-59,7,7,7,-60,-50,-46,7,-44,-103,-104,7,7,-45,7,-41,-61,-43,7,-40,-74,-5,-39,7,7,-42,7,7,7,7,-56,-55,-120,7,-51,-54,-58,7,7,7,-52,-57,7,-120,-53,]),'CHAR_ID':([20,43,85,87,88,89,90,91,95,97,107,108,109,112,114,115,130,138,143,144,145,148,152,154,159,162,163,165,176,183,184,188,190,193,198,204,206,207,208,210,215,216,218,223,225,227,228,230,231,233,234,235,236,],[61,61,-33,-36,-48,141,-38,61,-32,-34,-49,-9,-37,61,-35,61,61,-8,-47,-10,61,61,-59,61,-60,-50,-46,-44,-45,-41,-61,-43,61,-40,61,-39,61,-42,61,61,-56,-55,-120,-51,-54,-58,61,61,-52,-57,61,-120,-53,]),'LE':([1,3,5,7,9,11,13,18,19,21,22,24,26,38,48,49,69,70,71,72,73,81,82,119,122,123,124,125,127,128,129,131,132,133,134,166,167,],[-108,-93,-78,-118,-97,53,-119,-90,-102,-85,-80,-116,-117,-99,-107,-106,-93,-100,-101,-98,-109,-81,-79,-105,-87,-86,-89,-88,-94,-96,-95,-92,-91,53,53,-103,-104,]),'RPAREN':([1,3,5,7,9,11,13,15,18,19,21,22,24,26,27,30,31,38,47,48,49,59,60,61,62,69,70,71,72,73,75,76,77,78,79,80,81,82,83,101,111,119,120,121,122,123,124,125,127,128,129,130,131,132,133,134,135,136,139,140,141,142,153,161,166,167,170,171,172,185,187,189,191,194,195,196,201,211,217,221,226,232,],[-108,-93,-78,-118,-97,-82,-119,-73,-90,-102,-85,-80,-116,-117,-66,-64,73,-99,119,-107,-106,-113,-112,-114,-115,-93,-100,-101,-98,-109,-72,-70,-71,-67,-69,-68,-81,-79,-120,-63,-62,-105,-110,167,-87,-86,-89,-88,-94,-96,-95,-120,-92,-91,-83,-84,-65,173,-18,-16,-17,-15,187,193,-103,-104,197,-31,199,204,-19,206,208,210,-111,-74,-20,-30,222,-120,230,234,]),'SEMI':([1,3,5,7,8,9,11,13,15,18,19,21,22,24,26,27,30,38,43,48,49,69,70,71,72,73,75,76,77,78,79,80,81,82,85,86,87,88,90,91,92,94,95,97,99,100,101,107,108,109,110,111,112,114,115,117,119,122,123,124,125,127,128,129,131,132,133,134,135,138,139,140,141,142,143,144,145,148,149,151,152,154,159,162,163,165,166,167,175,176,180,181,183,184,186,187,188,190,193,196,197,199,201,204,205,206,207,208,210,213,214,215,216,218,220,222,223,225,227,228,230,231,233,234,235,236,],[-108,-93,-78,-118,44,-97,-82,-119,-73,-90,-102,-85,-80,-116,-117,-66,-64,-99,-120,-107,-106,-93,-100,-101,-98,-109,-72,-70,-71,-67,-69,-68,-81,-79,-33,138,-36,-48,-38,-120,-13,-120,-32,-34,-11,152,-63,-49,-9,-37,159,-62,-120,-35,-120,165,-105,-87,-86,-89,-88,-94,-96,-95,-92,-91,-83,-84,-65,-8,-18,-16,-17,-15,-47,-10,-120,-120,184,-120,-59,-120,-60,-50,-46,-44,-103,-104,-12,-45,-14,-21,-41,-61,205,-19,-43,-120,-40,-74,-28,-29,-20,-39,-120,-120,-42,-120,-120,-22,221,-56,-55,-120,-23,227,-51,-54,-58,-120,-120,-52,-57,-120,-120,-53,]),'SWITCH':([43,85,87,88,90,91,95,97,107,108,109,112,114,115,138,143,144,145,148,152,154,159,162,163,165,176,183,184,188,190,193,204,206,207,208,210,215,216,218,223,225,227,228,230,231,233,234,235,236,],[106,-33,-36,-48,-38,106,-32,-34,-49,-9,-37,106,-35,106,-8,-47,-10,106,106,-59,106,-60,-50,-46,-44,-45,-41,-61,-43,106,-40,-39,106,-42,106,106,-56,-55,-120,-51,-54,-58,106,106,-52,-57,106,-120,-53,]),'LT':([1,3,5,7,9,11,13,18,19,21,22,24,26,38,48,49,69,70,71,72,73,81,82,119,122,123,124,125,127,128,129,131,132,133,134,166,167,],[-108,-93,-78,-118,-97,51,-119,-90,-102,-85,-80,-116,-117,-99,-107,-106,-93,-100,-101,-98,-109,-81,-79,-105,-87,-86,-89,-88,-94,-96,-95,-92,-91,51,51,-103,-104,]),'STR_LIT':([0,1,2,3,4,5,7,9,11,12,13,14,15,17,18,19,21,22,23,24,25,26,27,28,29,32,33,34,35,36,37,38,39,40,42,43,44,45,46,47,48,49,50,51,52,53,54,56,57,58,64,65,66,67,69,70,71,72,73,74,75,76,77,78,79,80,81,82,85,87,88,90,91,94,95,97,102,105,107,108,109,112,114,115,119,122,123,124,125,127,128,129,131,132,133,134,138,143,144,145,146,147,148,150,151,152,154,155,158,159,162,163,164,165,166,167,168,169,176,182,183,184,188,190,193,196,200,204,205,206,207,208,209,210,212,215,216,218,221,223,225,227,228,229,230,231,233,234,235,236,],[13,-108,13,-93,13,-78,-118,-97,-82,-7,-119,-6,-73,13,-90,-102,-85,-80,13,-116,13,-117,-66,13,13,13,13,13,13,13,13,-99,13,13,13,13,-26,-27,13,13,-107,-106,13,13,13,13,13,13,13,13,13,13,13,13,-93,-100,-101,-98,-109,13,-72,-70,-71,-67,-69,-68,-81,-79,-33,-36,-48,-38,13,13,-32,-34,13,13,-49,-9,-37,13,-35,13,-105,-87,-86,-89,-88,-94,-96,-95,-92,-91,-83,-84,-8,-47,-10,13,13,13,13,13,13,-59,13,13,13,-60,-50,-46,13,-44,-103,-104,13,13,-45,13,-41,-61,-43,13,-40,-74,-5,-39,13,13,-42,13,13,13,13,-56,-55,-120,13,-51,-54,-58,13,13,13,-52,-57,13,-120,-53,]),'ADD_OP':([1,3,5,7,9,11,13,18,19,21,22,24,26,38,48,49,69,70,71,72,73,81,82,119,122,123,124,125,127,128,129,131,132,133,134,166,167,],[-108,-93,-78,-118,-97,-82,-119,-90,-102,65,-80,-116,-117,-99,-107,-106,-93,65,-101,-98,-109,-81,-79,-105,65,65,65,65,-94,-96,-95,-92,-91,-83,-84,-103,-104,]),'COLON':([1,3,5,7,9,11,13,15,18,19,21,22,24,26,27,30,38,48,49,59,60,61,62,69,70,71,72,73,75,76,77,78,79,80,81,82,93,103,119,122,123,124,125,126,127,128,129,131,132,133,134,135,156,157,166,167,196,],[-108,-93,-78,-118,-97,-82,-119,-73,-90,-102,-85,-80,-116,-117,-66,-64,-99,-107,-106,-113,-112,-114,-115,-93,-100,-101,-98,-109,-72,-70,-71,-67,-69,-68,-81,-79,148,154,-105,-87,-86,-89,-88,169,-94,-96,-95,-92,-91,-83,-84,-65,190,-77,-103,-104,-74,]),'ADD_ASSIGN':([1,3,5,7,9,11,13,18,19,21,22,24,26,38,48,49,69,70,71,72,73,81,82,119,122,123,124,125,127,128,129,131,132,133,134,166,167,],[-108,37,-78,-118,-97,-82,-119,-90,-102,-85,-80,-116,-117,-99,-107,-106,-93,-100,-101,-98,-109,-81,-79,-105,-87,-86,-89,-88,-94,-96,-95,-92,-91,-83,-84,-103,-104,]),'$end}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression_statement':([43,91,112,115,145,148,154,190,206,208,210,228,230,234,],[85,85,85,85,85,85,85,85,85,85,85,85,85,85,]),'constant':([0,2,4,17,23,25,28,29,32,33,34,35,36,37,39,40,42,43,46,47,50,51,52,53,54,56,57,58,64,65,66,67,74,91,94,102,105,112,115,145,146,147,148,150,151,154,155,158,164,168,169,182,190,205,206,208,209,210,212,221,228,229,230,234,],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,]),'unary_expression':([0,2,4,17,23,25,28,29,32,33,34,35,36,37,39,40,42,43,46,47,50,51,52,53,54,56,57,58,64,65,66,67,74,91,94,102,105,112,115,145,146,147,148,151,154,155,158,164,168,169,182,190,205,206,208,209,210,212,221,228,229,230,234,],[3,3,38,3,3,69,69,72,3,3,3,3,3,3,69,69,3,3,3,3,69,69,69,69,3,127,128,129,69,69,69,69,3,3,3,3,69,3,3,3,69,3,3,3,3,3,3,3,3,69,3,3,3,3,3,3,3,3,3,3,3,3,3,]),'initializer':([147,182,212,],[180,202,219,]),'init_declarator_list':([43,91,],[86,86,]),'fxn_var_statement':([0,17,23,42,],[23,23,23,23,]),'fxn_prot_args':([130,198,],[170,211,]),'iteration_statement':([43,91,112,115,145,148,154,190,206,208,210,228,230,234,],[87,87,87,87,87,87,87,87,87,87,87,87,87,87,]),'external_declaration':([0,17,23,42,],[6,55,68,84,]),'fxn_declaration':([0,17,23,42,],[8,8,8,8,]),'compound_statement':([8,43,91,112,115,145,148,154,173,190,206,208,210,228,230,234,],[45,97,97,97,97,97,97,97,200,97,97,97,97,97,97,97,]),'selection_statement':([43,91,112,115,145,148,154,190,206,208,210,228,230,234,],[114,114,114,114,114,114,114,114,114,114,114,114,114,114,]),'postfix_expression':([0,2,4,17,23,25,28,29,32,33,34,35,36,37,39,40,42,43,46,47,50,51,52,53,54,56,57,58,64,65,66,67,74,91,94,102,105,112,115,145,146,147,148,151,154,155,158,164,168,169,182,190,205,206,208,209,210,212,221,228,229,230,234,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'start':([0,],[10,]),'relational_expression':([0,2,17,23,28,32,33,34,35,36,37,39,40,42,43,46,47,54,66,67,74,91,94,102,105,112,115,145,146,147,148,151,154,155,158,164,168,169,182,190,205,206,208,209,210,212,221,228,229,230,234,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,133,134,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'fxn_definition':([0,17,23,42,],[12,12,12,12,]),'main':([6,],[42,]),'fxn_prot':([0,17,23,42,],[14,14,14,14,]),'logical_or_expression':([0,2,17,23,28,32,33,34,35,36,37,40,42,43,46,47,54,74,91,94,102,105,112,115,145,146,147,148,151,154,155,158,164,168,169,182,190,205,206,208,209,210,212,221,228,229,230,234,],[15,15,15,15,71,15,15,15,15,15,15,82,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'empty':([0,17,23,42,43,83,91,94,112,115,130,145,146,148,151,154,190,205,206,208,210,218,221,228,230,234,235,],[16,16,16,16,111,136,111,111,111,111,172,111,177,111,111,111,111,111,111,111,111,225,111,111,111,111,225,]),'assignment_expression':([0,2,17,23,32,33,34,35,36,37,42,43,46,47,54,74,91,94,102,112,115,145,147,148,151,154,155,158,164,168,182,190,205,206,208,209,210,212,221,228,229,230,234,],[17,30,17,17,75,76,77,78,79,80,17,30,30,120,30,135,30,30,30,30,30,30,181,30,30,30,30,30,30,195,181,30,30,30,30,30,30,181,30,30,30,30,30,]),'init_declarator':([43,91,137,],[99,99,175,]),'argument_expression_list':([47,],[121,]),'statement_list':([43,91,],[115,145,]),'expression_opt':([43,91,94,112,115,145,148,151,154,190,205,206,208,210,221,228,230,234,],[117,117,149,117,117,117,117,186,117,117,214,117,117,117,226,117,117,117,]),'primary_expression':([0,2,4,17,23,25,28,29,32,33,34,35,36,37,39,40,42,43,46,47,50,51,52,53,54,56,57,58,64,65,66,67,74,91,94,102,105,112,115,145,146,147,148,150,151,154,155,158,164,168,169,182,190,205,206,208,209,210,212,221,228,229,230,234,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,185,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'declaration':([43,91,],[108,144,]),'logical_and_expression':([0,2,17,23,28,32,33,34,35,36,37,40,42,43,46,47,54,74,91,94,102,105,112,115,145,146,147,148,151,154,155,158,164,168,169,182,190,205,206,208,209,210,212,221,228,229,230,234,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'declarator':([43,91,102,137,174,],[92,92,153,92,153,]),'add_expression':([0,2,17,23,25,28,32,33,34,35,36,37,39,40,42,43,46,47,50,51,52,53,54,66,67,74,91,94,102,105,112,115,145,146,147,148,151,154,155,158,164,168,169,182,190,205,206,208,209,210,212,221,228,229,230,234,],[21,21,21,21,70,21,21,21,21,21,21,21,21,21,21,21,21,21,122,123,124,125,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'equality_expression':([0,2,17,23,28,32,33,34,35,36,37,39,40,42,43,46,47,54,74,91,94,102,105,112,115,145,146,147,148,151,154,155,158,164,168,169,182,190,205,206,208,209,210,212,221,228,229,230,234,],[22,22,22,22,22,22,22,22,22,22,22,81,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'jump_statement':([43,91,112,115,145,148,154,190,206,208,210,228,230,234,],[109,109,109,109,109,109,109,109,109,109,109,109,109,109,]),'io_statement':([43,91,112,115,145,148,154,190,206,208,210,228,230,234,],[90,90,90,90,90,90,90,90,90,90,90,90,90,90,]),'else_if_statement':([218,235,],[223,236,]),'constant_expression_opt':([146,],[178,]),'labeled_statement':([43,91,112,115,145,148,154,190,206,208,210,228,230,234,],[95,95,95,95,95,95,95,95,95,95,95,95,95,95,]),'declaration_list':([43,],[91,]),'statement':([43,91,112,115,145,148,154,190,206,208,210,228,230,234,],[107,107,160,162,162,183,188,207,215,216,218,231,233,235,]),'constant_expression':([105,146,],[156,179,]),'initializer_list':([182,],[203,]),'conditional_expression':([0,2,17,23,32,33,34,35,36,37,42,43,46,47,54,74,91,94,102,105,112,115,145,146,147,148,151,154,155,158,164,168,169,182,190,205,206,208,209,210,212,221,228,229,230,234,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,157,27,27,27,157,27,27,27,27,27,27,27,27,196,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'mult_expression':([0,2,17,23,25,28,32,33,34,35,36,37,39,40,42,43,46,47,50,51,52,53,54,64,65,66,67,74,91,94,102,105,112,115,145,146,147,148,151,154,155,158,164,168,169,182,190,205,206,208,209,210,212,221,228,229,230,234,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,131,132,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'identifier':([20,43,91,112,115,130,145,148,154,190,198,206,208,210,228,230,234,],[63,93,93,93,93,171,93,93,93,93,171,93,93,93,93,93,93,]),'expression':([2,43,46,54,91,94,102,112,115,145,148,151,154,155,158,164,190,205,206,208,209,210,221,228,229,230,234,],[31,101,118,126,101,101,31,101,101,101,101,101,101,189,191,194,101,101,101,101,217,101,101,101,232,101,101,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> external_declaration main external_declaration','start',3,'p_start','parser.py',12),
  ('external_declaration -> assignment_expression external_declaration','external_declaration',2,'p_external_declaration_1','parser.py',17),
  ('external_declaration -> fxn_var_statement external_declaration','external_declaration',2,'p_external_declaration_2','parser.py',21),
  ('external_declaration -> empty','external_declaration',1,'p_external_declaration_3','parser.py',24),
  ('main -> MAIN LPAREN empty RPAREN compound_statement','main',5,'p_main','parser.py',27),
  ('fxn_var_statement -> fxn_prot','fxn_var_statement',1,'p_fxn_var_statement_1','parser.py',33),
  ('fxn_var_statement -> fxn_definition','fxn_var_statement',1,'p_fxn_var_statement_2','parser.py',37),
  ('declaration -> init_declarator_list SEMI','declaration',2,'p_declaration','parser.py',40),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list_1','parser.py',44),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list_2','parser.py',48),
  ('init_declarator_list -> init_declarator','init_declarator_list',1,'p_init_declarator_list_1','parser.py',51),
  ('init_declarator_list -> init_declarator_list COMMA init_declarator','init_declarator_list',3,'p_init_declaration_list_2','parser.py',55),
  ('init_declarator -> declarator','init_declarator',1,'p_init_declarator_1','parser.py',58),
  ('init_declarator -> declarator ASSIGN_OP initializer','init_declarator',3,'p_init_declarator_2','parser.py',63),
  ('declarator -> VAR FLOAT_ID','declarator',2,'p_declarator_1','parser.py',70),
  ('declarator -> VAR INT_ID','declarator',2,'p_declarator_2','parser.py',76),
  ('declarator -> VAR CHAR_ID','declarator',2,'p_declarator_3','parser.py',82),
  ('declarator -> VAR STR_ID','declarator',2,'p_declarator_4','parser.py',88),
  ('declarator -> LPAREN declarator RPAREN','declarator',3,'p_declarator_5','parser.py',94),
  ('declarator -> declarator LBRACKET constant_expression_opt RBRACKET','declarator',4,'p_declarator_6','parser.py',98),
  ('initializer -> assignment_expression','initializer',1,'p_initializer_1','parser.py',101),
  ('initializer -> LBRACE initializer_list RBRACE','initializer',3,'p_initializer_2','parser.py',106),
  ('initializer -> LBRACE initializer_list COMMA RBRACE','initializer',4,'p_initializer_3','parser.py',109),
  ('initializer_list -> initializer','initializer_list',1,'p_initializer_list_1','parser.py',112),
  ('initializer_list -> initializer_list COMMA initializer','initializer_list',3,'p_initializer_list_2','parser.py',116),
  ('fxn_prot -> fxn_declaration SEMI','fxn_prot',2,'p_fxn_prot','parser.py',119),
  ('fxn_definition -> fxn_declaration compound_statement','fxn_definition',2,'p_fxn_definition','parser.py',125),
  ('fxn_declaration -> VAR identifier LPAREN fxn_prot_args RPAREN','fxn_declaration',5,'p_fxn_declaration_1','parser.py',129),
  ('fxn_declaration -> VAR identifier LPAREN empty RPAREN','fxn_declaration',5,'p_fxn_declaration_2','parser.py',133),
  ('fxn_prot_args -> identifier COMMA fxn_prot_args','fxn_prot_args',3,'p_fxn_prot_args_1','parser.py',136),
  ('fxn_prot_args -> identifier','fxn_prot_args',1,'p_fxn_prot_args_2','parser.py',139),
  ('statement -> labeled_statement','statement',1,'p_statement','parser.py',145),
  ('statement -> expression_statement','statement',1,'p_statement','parser.py',146),
  ('statement -> compound_statement','statement',1,'p_statement','parser.py',147),
  ('statement -> selection_statement','statement',1,'p_statement','parser.py',148),
  ('statement -> iteration_statement','statement',1,'p_statement','parser.py',149),
  ('statement -> jump_statement','statement',1,'p_statement','parser.py',150),
  ('statement -> io_statement','statement',1,'p_statement','parser.py',151),
  ('io_statement -> PRINT LPAREN primary_expression RPAREN','io_statement',4,'p_io_statement_1','parser.py',157),
  ('io_statement -> SCAN LPAREN RPAREN','io_statement',3,'p_io_statement_2','parser.py',161),
  ('labeled_statement -> identifier COLON statement','labeled_statement',3,'p_labled_statement_1','parser.py',165),
  ('labeled_statement -> CASE constant_expression COLON statement','labeled_statement',4,'p_labeled_statement_2','parser.py',170),
  ('labeled_statement -> DEFAULT COLON statement','labeled_statement',3,'p_labeled_statement_3','parser.py',173),
  ('expression_statement -> expression_opt SEMI','expression_statement',2,'p_expression_statement','parser.py',177),
  ('compound_statement -> LBRACE declaration_list statement_list RBRACE','compound_statement',4,'p_compound_statement_1','parser.py',183),
  ('compound_statement -> LBRACE statement_list RBRACE','compound_statement',3,'p_compund_statement_2','parser.py',189),
  ('compound_statement -> LBRACE declaration_list RBRACE','compound_statement',3,'p_compound_statement_3','parser.py',193),
  ('compound_statement -> LBRACE RBRACE','compound_statement',2,'p_compund_statement_4','parser.py',197),
  ('statement_list -> statement','statement_list',1,'p_statement_list_1','parser.py',201),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list_2','parser.py',206),
  ('selection_statement -> IF LPAREN expression RPAREN statement else_if_statement','selection_statement',6,'p_selection_statement_1','parser.py',209),
  ('selection_statement -> IF LPAREN expression RPAREN statement else_if_statement ELSE statement','selection_statement',8,'p_selection_statement_2','parser.py',217),
  ('else_if_statement -> ELSE_IF LPAREN expression RPAREN statement else_if_statement','else_if_statement',6,'p_else_if_statement_1','parser.py',227),
  ('else_if_statement -> empty','else_if_statement',1,'p_else_if_statement_2','parser.py',234),
  ('selection_statement -> SWITCH LPAREN expression RPAREN statement','selection_statement',5,'p_selection_statement_3','parser.py',238),
  ('iteration_statement -> WHILE LPAREN expression RPAREN statement','iteration_statement',5,'p_iteration_statement_1','parser.py',243),
  ('iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement','iteration_statement',9,'p_iteration_statement_2','parser.py',249),
  ('iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMI','iteration_statement',7,'p_iteration_statement_3','parser.py',253),
  ('jump_statement -> CONTINUE SEMI','jump_statement',2,'p_jump_statement_1','parser.py',257),
  ('jump_statement -> BREAK SEMI','jump_statement',2,'p_jump_statement_2','parser.py',261),
  ('jump_statement -> RETURN expression_opt SEMI','jump_statement',3,'p_jump_statement_3','parser.py',264),
  ('expression_opt -> empty','expression_opt',1,'p_expression_opt_1','parser.py',268),
  ('expression_opt -> expression','expression_opt',1,'p_expression_opt_2','parser.py',272),
  ('expression -> assignment_expression','expression',1,'p_expression_1','parser.py',276),
  ('expression -> expression COMMA assignment_expression','expression',3,'p_expression_2','parser.py',281),
  ('assignment_expression -> conditional_expression','assignment_expression',1,'p_assignment_expression_1','parser.py',284),
  ('assignment_expression -> unary_expression ASSIGN_OP assignment_expression','assignment_expression',3,'p_assignment_expression_2','parser.py',289),
  ('assignment_expression -> unary_expression ADD_ASSIGN assignment_expression','assignment_expression',3,'p_assignment_expression_3','parser.py',295),
  ('assignment_expression -> unary_expression MIN_ASSIGN assignment_expression','assignment_expression',3,'p_assignment_expression_4','parser.py',300),
  ('assignment_expression -> unary_expression MUL_ASSIGN assignment_expression','assignment_expression',3,'p_assignment_expression_5','parser.py',305),
  ('assignment_expression -> unary_expression DIV_ASSIGN assignment_expression','assignment_expression',3,'p_assignment_expression_6','parser.py',311),
  ('assignment_expression -> unary_expression MOD_ASSIGN assignment_expression','assignment_expression',3,'p_assignment_expression_7','parser.py',317),
  ('conditional_expression -> logical_or_expression','conditional_expression',1,'p_conditional_expression_1','parser.py',323),
  ('conditional_expression -> logical_or_expression COND_OP expression COLON conditional_expression','conditional_expression',5,'p_conditional_expression_2','parser.py',328),
  ('constant_expression_opt -> empty','constant_expression_opt',1,'p_constant_expression_opt_1','parser.py',335),
  ('constant_expression_opt -> constant_expression','constant_expression_opt',1,'p_constant_expression_opt_2','parser.py',339),
  ('constant_expression -> conditional_expression','constant_expression',1,'p_constant_expression','parser.py',343),
  ('logical_or_expression -> logical_and_expression','logical_or_expression',1,'p_logical_or_expression_1','parser.py',348),
  ('logical_or_expression -> logical_and_expression OR logical_or_expression','logical_or_expression',3,'p_logical_or_expression_2','parser.py',353),
  ('logical_and_expression -> equality_expression','logical_and_expression',1,'p_logical_and_expression_1','parser.py',357),
  ('logical_and_expression -> logical_and_expression AND equality_expression','logical_and_expression',3,'p_logical_and_expression_2','parser.py',362),
  ('equality_expression -> relational_expression','equality_expression',1,'p_equality_expression_1','parser.py',366),
  ('equality_expression -> equality_expression EQ relational_expression','equality_expression',3,'p_equality_expression_2','parser.py',371),
  ('equality_expression -> equality_expression NEQ relational_expression','equality_expression',3,'p_equality_expression_3','parser.py',375),
  ('relational_expression -> add_expression','relational_expression',1,'p_relational_expression_1','parser.py',379),
  ('relational_expression -> relational_expression LT add_expression','relational_expression',3,'p_relational_expression_2','parser.py',384),
  ('relational_expression -> relational_expression GT add_expression','relational_expression',3,'p_relational_expression_3','parser.py',388),
  ('relational_expression -> relational_expression LE add_expression','relational_expression',3,'p_relational_expression_4','parser.py',392),
  ('relational_expression -> relational_expression GE add_expression','relational_expression',3,'p_relational_expression_5','parser.py',396),
  ('add_expression -> mult_expression','add_expression',1,'p_add_expression_1','parser.py',400),
  ('add_expression -> add_expression ADD_OP mult_expression','add_expression',3,'p_add_expression_2','parser.py',406),
  ('add_expression -> add_expression SUB_OP mult_expression','add_expression',3,'p_add_expression_3','parser.py',411),
  ('mult_expression -> unary_expression','mult_expression',1,'p_mult_expression_1','parser.py',416),
  ('mult_expression -> mult_expression MULT_OP unary_expression','mult_expression',3,'p_mult_expression_2','parser.py',422),
  ('mult_expression -> mult_expression DIV_OP unary_expression','mult_expression',3,'p_mult_expression_3','parser.py',426),
  ('mult_expression -> mult_expression MOD_OP unary_expression','mult_expression',3,'p_mult_expression_4','parser.py',430),
  ('unary_expression -> postfix_expression','unary_expression',1,'p_unary_expression_1','parser.py',434),
  ('unary_expression -> INC unary_expression','unary_expression',2,'p_unary_expression_2','parser.py',440),
  ('unary_expression -> DEC unary_expression','unary_expression',2,'p_unary_expression_3','parser.py',444),
  ('unary_expression -> SUB_OP add_expression','unary_expression',2,'p_unary_expression_4','parser.py',448),
  ('unary_expression -> NOT logical_or_expression','unary_expression',2,'p_unary_expression_5','parser.py',452),
  ('postfix_expression -> primary_expression','postfix_expression',1,'p_postfix_expression_1','parser.py',456),
  ('postfix_expression -> postfix_expression LBRACKET expression RBRACKET','postfix_expression',4,'p_postfix_expression_2','parser.py',461),
  ('postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN','postfix_expression',4,'p_postfix_expression_3','parser.py',464),
  ('postfix_expression -> postfix_expression LPAREN RPAREN','postfix_expression',3,'p_postfix_expression_4','parser.py',467),
  ('postfix_expression -> postfix_expression INC','postfix_expression',2,'p_postfix_expression_5','parser.py',471),
  ('postfix_expression -> postfix_expression DEC','postfix_expression',2,'p_postfix_expression_6','parser.py',475),
  ('primary_expression -> constant','primary_expression',1,'p_primary_expression_2','parser.py',487),
  ('primary_expression -> LPAREN expression RPAREN','primary_expression',3,'p_primary_expression_3','parser.py',494),
  ('argument_expression_list -> assignment_expression','argument_expression_list',1,'p_argument_expression_list','parser.py',499),
  ('argument_expression_list -> argument_expression_list COMMA assignment_expression','argument_expression_list',3,'p_argument_expression_list','parser.py',500),
  ('identifier -> FLOAT_ID','identifier',1,'p_identifier','parser.py',506),
  ('identifier -> INT_ID','identifier',1,'p_identifier','parser.py',507),
  ('identifier -> CHAR_ID','identifier',1,'p_identifier','parser.py',508),
  ('identifier -> STR_ID','identifier',1,'p_identifier','parser.py',509),
  ('constant -> FLOAT_LIT','constant',1,'p_constant','parser.py',517),
  ('constant -> INT_LIT','constant',1,'p_constant','parser.py',518),
  ('constant -> CHAR_LIT','constant',1,'p_constant','parser.py',519),
  ('constant -> STR_LIT','constant',1,'p_constant','parser.py',520),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',528),
]
