
# /home/genesis/Documents/Code/150/CS150MP/parser/parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.5'

_lr_method = 'LALR'

_lr_signature = '60E5F8C73D321C7658B28A38F5AB24D0'
    
_lr_action_items = {'DO':([53,91,93,94,96,100,101,111,112,113,116,117,118,141,144,147,150,152,157,160,162,179,182,184,197,198,199,201,206,207,209,214,216,217,218,219,],[116,-30,-33,-39,116,-29,-31,-44,-9,-34,116,-32,116,-8,-9,-38,-53,116,-54,-44,-37,-55,-36,116,116,-35,116,116,-50,-49,-46,116,-52,-47,116,-51,]),'LBRACE':([14,53,91,93,94,96,100,101,111,112,113,116,117,118,141,144,146,147,150,152,157,160,162,170,178,179,182,184,189,191,197,198,199,201,203,206,207,209,214,216,217,218,219,],[53,53,-30,-33,-39,53,-29,-31,-44,-9,-34,53,-32,53,-8,-9,178,-38,-53,53,-54,-44,-37,53,178,-55,-36,53,-25,-26,53,-35,53,53,178,-50,-49,-46,53,-52,-47,53,-51,]),'RETURN':([53,91,93,94,96,100,101,111,112,113,116,117,118,141,144,147,150,152,157,160,162,179,182,184,197,198,199,201,206,207,209,214,216,217,218,219,],[99,-30,-33,-39,99,-29,-31,-44,-9,-34,99,-32,99,-8,-9,-38,-53,99,-54,-44,-37,-55,-36,99,99,-35,99,99,-50,-49,-46,99,-52,-47,99,-51,]),'LPAREN':([0,1,2,3,4,5,6,7,8,9,10,12,13,15,17,18,19,20,21,23,24,25,27,28,29,30,31,32,33,34,35,36,40,41,42,43,44,45,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,91,93,94,96,99,100,101,102,106,108,109,110,111,112,113,116,117,118,119,122,125,126,127,128,129,130,131,133,134,135,136,140,141,144,145,146,147,149,150,152,153,156,157,160,161,162,163,164,165,171,178,179,182,184,186,192,196,197,198,199,200,201,203,206,207,209,212,214,216,217,218,219,],[2,-105,2,-89,46,-109,2,2,-74,-116,-62,-115,-111,57,-78,-7,-112,-6,-69,2,-86,-98,-81,-76,-110,-113,2,-114,2,-104,2,77,2,2,2,2,2,2,-95,2,2,89,2,106,-23,-24,2,2,-103,-102,2,2,2,2,2,2,2,132,2,2,2,2,-89,-96,-97,-94,2,-106,2,-68,-66,-67,-63,-65,-64,-70,-77,-75,-30,-33,-39,106,2,-29,-31,149,106,153,2,156,-44,-9,-34,2,-32,106,161,-101,-83,-82,-85,-84,-90,-92,-91,-88,-87,-79,-80,171,-8,-9,2,2,-38,2,-53,2,2,2,-54,-44,2,-37,-99,-100,2,171,2,-55,-36,2,200,-5,2,2,-35,2,2,2,2,-50,-49,-46,2,2,-52,-47,2,-51,]),'SCAN':([0,1,2,3,5,6,8,9,10,12,13,15,17,18,19,20,21,23,24,25,27,28,29,30,32,34,40,41,42,43,44,45,48,52,53,54,55,56,57,58,59,73,74,75,76,78,79,80,81,82,83,84,85,86,87,88,91,93,94,96,99,100,101,106,111,112,113,116,117,118,122,125,126,127,128,129,130,131,133,134,135,136,141,144,146,147,149,150,152,153,156,157,160,161,162,163,164,165,178,179,182,184,192,196,197,198,199,200,201,203,206,207,209,212,214,216,217,218,219,],[4,-105,4,-89,-109,4,-74,-116,-62,-115,-111,-93,-78,-7,-112,-6,-69,4,-86,-98,-81,-76,-110,-113,-114,-104,4,4,4,4,4,4,-95,4,4,-23,-24,4,4,-103,-102,-89,-96,-97,-94,-106,4,-68,-66,-67,-63,-65,-64,-70,-77,-75,-30,-33,-39,4,4,-29,-31,4,-44,-9,-34,4,-32,4,-101,-83,-82,-85,-84,-90,-92,-91,-88,-87,-79,-80,-8,-9,4,-38,4,-53,4,4,4,-54,-44,4,-37,-99,-100,4,4,-55,-36,4,-5,4,4,-35,4,4,4,4,-50,-49,-46,4,4,-52,-47,4,-51,]),'DEFAULT':([53,91,93,94,96,100,101,111,112,113,116,117,118,141,144,147,150,152,157,160,162,179,182,184,197,198,199,201,206,207,209,214,216,217,218,219,],[107,-30,-33,-39,107,-29,-31,-44,-9,-34,107,-32,107,-8,-9,-38,-53,107,-54,-44,-37,-55,-36,107,107,-35,107,107,-50,-49,-46,107,-52,-47,107,-51,]),'DIV_OP':([1,3,5,8,9,12,13,15,17,19,24,25,27,28,29,30,32,34,48,58,59,73,74,75,76,78,87,88,122,125,126,127,128,129,130,131,133,134,135,136,163,164,],[-105,-89,-109,-74,-116,-115,-111,-93,-78,-112,67,-98,-81,-76,-110,-113,-114,-104,-95,-103,-102,-89,-96,-97,-94,-106,-77,-75,-101,-83,-82,-85,-84,-90,-92,-91,67,67,-79,-80,-99,-100,]),'LBRACKET':([1,5,9,12,13,15,19,25,29,30,32,34,58,59,78,97,122,142,151,163,164,181,193,],[-105,-109,-116,-115,-111,56,-112,-98,-110,-113,-114,-104,-103,-102,-106,145,-101,-15,145,-99,-100,-16,-17,]),'WHILE':([53,91,93,94,96,100,101,111,112,113,116,117,118,141,144,147,150,152,157,158,160,162,179,182,184,197,198,199,201,206,207,209,214,216,217,218,219,],[108,-30,-33,-39,108,-29,-31,-44,-9,-34,108,-32,108,-8,-9,-38,-53,108,-54,186,-44,-37,-55,-36,108,108,-35,108,108,-50,-49,-46,108,-52,-47,108,-51,]),'DIV_ASSIGN':([1,3,5,8,9,12,13,15,17,19,24,25,27,28,29,30,32,34,48,58,59,73,74,75,76,78,87,88,122,125,126,127,128,129,130,131,133,134,135,136,163,164,],[-105,42,-109,-74,-116,-115,-111,-93,-78,-112,-86,-98,-81,-76,-110,-113,-114,-104,-95,-103,-102,-89,-96,-97,-94,-106,-77,-75,-101,-83,-82,-85,-84,-90,-92,-91,-88,-87,-79,-80,-99,-100,]),'MULT_OP':([1,3,5,8,9,12,13,15,17,19,24,25,27,28,29,30,32,34,48,58,59,73,74,75,76,78,87,88,122,125,126,127,128,129,130,131,133,134,135,136,163,164,],[-105,-89,-109,-74,-116,-115,-111,-93,-78,-112,65,-98,-81,-76,-110,-113,-114,-104,-95,-103,-102,-89,-96,-97,-94,-106,-77,-75,-101,-83,-82,-85,-84,-90,-92,-91,65,65,-79,-80,-99,-100,]),'PRINT':([2,53,56,79,91,93,94,96,99,100,101,106,111,112,113,116,117,118,141,144,147,149,150,152,153,156,157,160,161,162,179,182,184,196,197,198,199,200,201,206,207,209,212,214,216,217,218,219,],[36,36,36,36,-30,-33,-39,36,36,-29,-31,36,-44,-9,-34,36,-32,36,-8,-9,-38,36,-53,36,36,36,-54,-44,36,-37,-55,-36,36,36,36,-35,36,36,36,-50,-49,-46,36,36,-52,-47,36,-51,]),'DEC':([0,1,2,3,5,6,7,8,9,10,12,13,15,17,18,19,20,21,23,24,25,27,28,29,30,31,32,33,34,35,40,41,42,43,44,45,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63,65,66,67,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,91,93,94,96,99,100,101,106,109,111,112,113,116,117,118,122,125,126,127,128,129,130,131,133,134,135,136,141,144,145,146,147,149,150,152,153,156,157,160,161,162,163,164,165,178,179,182,184,192,196,197,198,199,200,201,203,206,207,209,212,214,216,217,218,219,],[7,-105,7,-89,-109,7,7,-74,-116,-62,-115,-111,58,-78,-7,-112,-6,-69,7,-86,-98,-81,-76,-110,-113,7,-114,7,-104,7,7,7,7,7,7,7,-95,7,7,7,7,-23,-24,7,7,-103,-102,7,7,7,7,7,7,7,7,7,7,7,-89,-96,-97,-94,7,-106,7,-68,-66,-67,-63,-65,-64,-70,-77,-75,-30,-33,-39,7,7,-29,-31,7,7,-44,-9,-34,7,-32,7,-101,-83,-82,-85,-84,-90,-92,-91,-88,-87,-79,-80,-8,-9,7,7,-38,7,-53,7,7,7,-54,-44,7,-37,-99,-100,7,7,-55,-36,7,-5,7,7,-35,7,7,7,7,-50,-49,-46,7,7,-52,-47,7,-51,]),'COMMA':([1,3,5,8,9,10,12,13,15,17,19,21,24,25,27,28,29,30,32,34,37,38,39,48,58,59,73,74,75,76,78,80,81,82,83,84,85,86,87,88,92,97,103,105,121,122,123,124,125,126,127,128,129,130,131,133,134,135,136,138,142,163,164,167,169,172,176,177,181,183,185,187,188,193,194,195,204,208,210,211,],[-105,-89,-109,-74,-116,-62,-115,-111,-93,-78,-112,-69,-86,-98,-81,-76,-110,-113,-114,-104,-60,-58,79,-95,-103,-102,-89,-96,-97,-94,-106,-68,-66,-67,-63,-65,-64,-70,-77,-75,140,-13,-11,79,79,-101,-107,165,-83,-82,-85,-84,-90,-92,-91,-88,-87,-79,-80,-59,-15,-99,-100,190,-61,-12,-14,-18,-16,79,79,79,-108,-17,-21,203,-19,79,-22,-20,]),'NEQ':([1,3,5,8,9,12,13,15,17,19,24,25,27,28,29,30,32,34,48,58,59,73,74,75,76,78,87,88,122,125,126,127,128,129,130,131,133,134,135,136,163,164,],[-105,-89,-109,-74,-116,-115,-111,-93,-78,-112,-86,-98,-81,72,-110,-113,-114,-104,-95,-103,-102,-89,-96,-97,-94,-106,72,-75,-101,-83,-82,-85,-84,-90,-92,-91,-88,-87,-79,-80,-99,-100,]),'CASE':([53,91,93,94,96,100,101,111,112,113,116,117,118,141,144,147,150,152,157,160,162,179,182,184,197,198,199,201,206,207,209,214,216,217,218,219,],[109,-30,-33,-39,109,-29,-31,-44,-9,-34,109,-32,109,-8,-9,-38,-53,109,-54,-44,-37,-55,-36,109,109,-35,109,109,-50,-49,-46,109,-52,-47,109,-51,]),'CHAR_LIT':([0,1,2,3,5,6,7,8,9,10,12,13,15,17,18,19,20,21,23,24,25,27,28,29,30,31,32,33,34,35,40,41,42,43,44,45,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63,65,66,67,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,91,93,94,96,99,100,101,106,109,111,112,113,116,117,118,122,125,126,127,128,129,130,131,133,134,135,136,141,144,145,146,147,149,150,152,153,156,157,160,161,162,163,164,165,178,179,182,184,192,196,197,198,199,200,201,203,206,207,209,212,214,216,217,218,219,],[12,-105,12,-89,-109,12,12,-74,-116,-62,-115,-111,-93,-78,-7,-112,-6,-69,12,-86,-98,-81,-76,-110,-113,12,-114,12,-104,12,12,12,12,12,12,12,-95,12,12,12,12,-23,-24,12,12,-103,-102,12,12,12,12,12,12,12,12,12,12,12,-89,-96,-97,-94,12,-106,12,-68,-66,-67,-63,-65,-64,-70,-77,-75,-30,-33,-39,12,12,-29,-31,12,12,-44,-9,-34,12,-32,12,-101,-83,-82,-85,-84,-90,-92,-91,-88,-87,-79,-80,-8,-9,12,12,-38,12,-53,12,12,12,-54,-44,12,-37,-99,-100,12,12,-55,-36,12,-5,12,12,-35,12,12,12,12,-50,-49,-46,12,12,-52,-47,12,-51,]),'CHAR_ID':([0,1,2,3,5,6,7,8,9,10,12,13,15,17,18,19,20,21,23,24,25,26,27,28,29,30,31,32,33,34,35,40,41,42,43,44,45,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63,65,66,67,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,91,93,94,95,96,99,100,101,106,109,111,112,113,116,117,118,122,125,126,127,128,129,130,131,132,133,134,135,136,141,144,145,146,147,149,150,152,153,156,157,160,161,162,163,164,165,178,179,182,184,190,192,196,197,198,199,200,201,203,206,207,209,212,214,216,217,218,219,],[13,-105,13,-89,-109,13,13,-74,-116,-62,-115,-111,-93,-78,-7,-112,-6,-69,13,-86,-98,13,-81,-76,-110,-113,13,-114,13,-104,13,13,13,13,13,13,13,-95,13,13,13,13,-23,-24,13,13,-103,-102,13,13,13,13,13,13,13,13,13,13,13,-89,-96,-97,-94,13,-106,13,-68,-66,-67,-63,-65,-64,-70,-77,-75,-30,-33,-39,13,13,13,-29,-31,13,13,-44,-9,-34,13,-32,13,-101,-83,-82,-85,-84,-90,-92,-91,13,-88,-87,-79,-80,-8,-9,13,13,-38,13,-53,13,13,13,-54,-44,13,-37,-99,-100,13,13,-55,-36,13,13,-5,13,13,-35,13,13,13,13,-50,-49,-46,13,13,-52,-47,13,-51,]),'RPAREN':([1,3,5,8,9,10,12,13,15,17,19,21,24,25,27,28,29,30,32,34,37,38,39,46,48,57,58,59,73,74,75,76,78,80,81,82,83,84,85,86,87,88,89,105,115,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,142,151,163,164,166,167,168,169,181,183,185,187,188,193,202,208,212,215,],[-105,-89,-109,-74,-116,-62,-115,-111,-93,-78,-112,-69,-86,-98,-81,-76,-110,-113,-114,-104,-60,-58,78,86,-95,122,-103,-102,-89,-96,-97,-94,-106,-68,-66,-67,-63,-65,-64,-70,-77,-75,-117,-57,-56,-101,-107,164,-83,-82,-85,-84,-90,-92,-91,-117,-88,-87,-79,-80,169,-59,170,-15,181,-99,-100,189,-28,191,-61,-16,197,199,201,-108,-17,-27,213,-117,218,]),'SEMI':([1,3,5,8,9,10,12,13,14,15,17,19,21,24,25,27,28,29,30,32,34,37,38,48,53,58,59,73,74,75,76,78,80,81,82,83,84,85,86,87,88,91,92,93,94,96,97,99,100,101,103,104,105,111,112,113,114,115,116,117,118,120,122,125,126,127,128,129,130,131,133,134,135,136,138,141,142,144,147,148,149,150,152,157,160,162,163,164,169,172,176,177,179,180,181,182,184,189,191,193,196,197,198,199,201,204,205,206,207,209,211,213,214,216,217,218,219,],[-105,-89,-109,-74,-116,-62,-115,-111,54,-93,-78,-112,-69,-86,-98,-81,-76,-110,-113,-114,-104,-60,-58,-95,-117,-103,-102,-89,-96,-97,-94,-106,-68,-66,-67,-63,-65,-64,-70,-77,-75,-30,141,-33,-39,-117,-13,-117,-29,-31,-11,150,-57,-44,-9,-34,157,-56,-117,-32,-117,162,-101,-83,-82,-85,-84,-90,-92,-91,-88,-87,-79,-80,-59,-8,-15,-9,-38,179,-117,-53,-117,-54,-44,-37,-99,-100,-61,-12,-14,-18,-55,196,-16,-36,-117,-25,-26,-17,-117,-117,-35,-117,-117,-19,212,-50,-49,-46,-20,216,-117,-52,-47,-117,-51,]),'SWITCH':([53,91,93,94,96,100,101,111,112,113,116,117,118,141,144,147,150,152,157,160,162,179,182,184,197,198,199,201,206,207,209,214,216,217,218,219,],[110,-30,-33,-39,110,-29,-31,-44,-9,-34,110,-32,110,-8,-9,-38,-53,110,-54,-44,-37,-55,-36,110,110,-35,110,110,-50,-49,-46,110,-52,-47,110,-51,]),'LT':([1,3,5,8,9,12,13,15,17,19,24,25,27,28,29,30,32,34,48,58,59,73,74,75,76,78,87,88,122,125,126,127,128,129,130,131,133,134,135,136,163,164,],[-105,-89,-109,-74,-116,-115,-111,-93,61,-112,-86,-98,-81,-76,-110,-113,-114,-104,-95,-103,-102,-89,-96,-97,-94,-106,-77,-75,-101,-83,-82,-85,-84,-90,-92,-91,-88,-87,61,61,-99,-100,]),'COLON':([1,5,8,9,12,13,15,17,19,24,25,27,28,29,30,32,34,48,58,59,73,74,75,76,78,87,88,107,122,125,126,127,128,129,130,131,133,134,135,136,154,155,163,164,],[-105,-109,-74,-116,-115,-111,-93,-78,-112,-86,-98,-81,-76,-110,-113,-114,-104,-95,-103,-102,-89,-96,-97,-94,-106,-77,-75,152,-101,-83,-82,-85,-84,-90,-92,-91,-88,-87,-79,-80,-73,184,-99,-100,]),'ADD_OP':([1,3,5,8,9,12,13,15,17,19,24,25,27,28,29,30,32,34,48,58,59,73,74,75,76,78,87,88,122,125,126,127,128,129,130,131,133,134,135,136,163,164,],[-105,-89,-109,-74,-116,-115,-111,-93,-78,-112,-86,-98,70,-76,-110,-113,-114,-104,-95,-103,-102,-89,70,-97,-94,-106,-77,-75,-101,70,70,70,70,-90,-92,-91,-88,-87,-79,-80,-99,-100,]),'STR_LIT':([0,1,2,3,5,6,7,8,9,10,12,13,15,17,18,19,20,21,23,24,25,27,28,29,30,31,32,33,34,35,40,41,42,43,44,45,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63,65,66,67,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,91,93,94,96,99,100,101,106,109,111,112,113,116,117,118,122,125,126,127,128,129,130,131,133,134,135,136,141,144,145,146,147,149,150,152,153,156,157,160,161,162,163,164,165,178,179,182,184,192,196,197,198,199,200,201,203,206,207,209,212,214,216,217,218,219,],[9,-105,9,-89,-109,9,9,-74,-116,-62,-115,-111,-93,-78,-7,-112,-6,-69,9,-86,-98,-81,-76,-110,-113,9,-114,9,-104,9,9,9,9,9,9,9,-95,9,9,9,9,-23,-24,9,9,-103,-102,9,9,9,9,9,9,9,9,9,9,9,-89,-96,-97,-94,9,-106,9,-68,-66,-67,-63,-65,-64,-70,-77,-75,-30,-33,-39,9,9,-29,-31,9,9,-44,-9,-34,9,-32,9,-101,-83,-82,-85,-84,-90,-92,-91,-88,-87,-79,-80,-8,-9,9,9,-38,9,-53,9,9,9,-54,-44,9,-37,-99,-100,9,9,-55,-36,9,-5,9,9,-35,9,9,9,9,-50,-49,-46,9,9,-52,-47,9,-51,]),'FLOAT_ID':([0,1,2,3,5,6,7,8,9,10,12,13,15,17,18,19,20,21,23,24,25,26,27,28,29,30,31,32,33,34,35,40,41,42,43,44,45,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63,65,66,67,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,91,93,94,95,96,99,100,101,106,109,111,112,113,116,117,118,122,125,126,127,128,129,130,131,132,133,134,135,136,141,144,145,146,147,149,150,152,153,156,157,160,161,162,163,164,165,178,179,182,184,190,192,196,197,198,199,200,201,203,206,207,209,212,214,216,217,218,219,],[5,-105,5,-89,-109,5,5,-74,-116,-62,-115,-111,-93,-78,-7,-112,-6,-69,5,-86,-98,5,-81,-76,-110,-113,5,-114,5,-104,5,5,5,5,5,5,5,-95,5,5,5,5,-23,-24,5,5,-103,-102,5,5,5,5,5,5,5,5,5,5,5,-89,-96,-97,-94,5,-106,5,-68,-66,-67,-63,-65,-64,-70,-77,-75,-30,-33,-39,5,5,5,-29,-31,5,5,-44,-9,-34,5,-32,5,-101,-83,-82,-85,-84,-90,-92,-91,5,-88,-87,-79,-80,-8,-9,5,5,-38,5,-53,5,5,5,-54,-44,5,-37,-99,-100,5,5,-55,-36,5,5,-5,5,5,-35,5,5,5,5,-50,-49,-46,5,5,-52,-47,5,-51,]),'$end':([1,3,5,6,8,9,10,12,13,15,16,17,18,19,20,21,22,23,24,25,27,28,29,30,32,34,47,48,52,54,55,58,59,64,73,74,75,76,78,80,81,82,83,84,85,86,87,88,90,94,122,125,126,127,128,129,130,131,133,134,135,136,147,163,164,192,],[-105,-89,-109,-117,-74,-116,-62,-115,-111,-93,0,-78,-7,-112,-6,-69,-4,-117,-86,-98,-81,-76,-110,-113,-114,-104,-3,-95,-117,-23,-24,-103,-102,-2,-89,-96,-97,-94,-106,-68,-66,-67,-63,-65,-64,-70,-77,-75,-1,-39,-101,-83,-82,-85,-84,-90,-92,-91,-88,-87,-79,-80,-38,-99,-100,-5,]),'GT':([1,3,5,8,9,12,13,15,17,19,24,25,27,28,29,30,32,34,48,58,59,73,74,75,76,78,87,88,122,125,126,127,128,129,130,131,133,134,135,136,163,164,],[-105,-89,-109,-74,-116,-115,-111,-93,60,-112,-86,-98,-81,-76,-110,-113,-114,-104,-95,-103,-102,-89,-96,-97,-94,-106,-77,-75,-101,-83,-82,-85,-84,-90,-92,-91,-88,-87,60,60,-99,-100,]),'RBRACE':([1,3,5,8,9,10,12,13,15,17,19,21,24,25,27,28,29,30,32,34,48,53,58,59,73,74,75,76,78,80,81,82,83,84,85,86,87,88,91,93,94,96,98,100,101,111,112,113,117,118,122,125,126,127,128,129,130,131,133,134,135,136,141,143,144,147,150,157,159,160,162,163,164,177,179,182,194,195,198,203,204,206,207,209,210,211,216,217,219,],[-105,-89,-109,-74,-116,-62,-115,-111,-93,-78,-112,-69,-86,-98,-81,-76,-110,-113,-114,-104,-95,94,-103,-102,-89,-96,-97,-94,-106,-68,-66,-67,-63,-65,-64,-70,-77,-75,-30,-33,-39,-41,147,-29,-31,-44,-9,-34,-32,-40,-101,-83,-82,-85,-84,-90,-92,-91,-88,-87,-79,-80,-8,-43,-9,-38,-53,-54,-42,-44,-37,-99,-100,-18,-55,-36,-21,204,-35,211,-19,-50,-49,-46,-22,-20,-52,-47,-51,]),'FOR':([53,91,93,94,96,100,101,111,112,113,116,117,118,141,144,147,150,152,157,160,162,179,182,184,197,198,199,201,206,207,209,214,216,217,218,219,],[102,-30,-33,-39,102,-29,-31,-44,-9,-34,102,-32,102,-8,-9,-38,-53,102,-54,-44,-37,-55,-36,102,102,-35,102,102,-50,-49,-46,102,-52,-47,102,-51,]),'ELSE':([91,93,94,100,101,113,117,147,150,157,162,179,182,198,206,207,209,216,217,219,],[-30,-33,-39,-29,-31,-34,-32,-38,-53,-54,-37,-55,-36,-35,-50,-49,214,-52,-47,-51,]),'GE':([1,3,5,8,9,12,13,15,17,19,24,25,27,28,29,30,32,34,48,58,59,73,74,75,76,78,87,88,122,125,126,127,128,129,130,131,133,134,135,136,163,164,],[-105,-89,-109,-74,-116,-115,-111,-93,62,-112,-86,-98,-81,-76,-110,-113,-114,-104,-95,-103,-102,-89,-96,-97,-94,-106,-77,-75,-101,-83,-82,-85,-84,-90,-92,-91,-88,-87,62,62,-99,-100,]),'LE':([1,3,5,8,9,12,13,15,17,19,24,25,27,28,29,30,32,34,48,58,59,73,74,75,76,78,87,88,122,125,126,127,128,129,130,131,133,134,135,136,163,164,],[-105,-89,-109,-74,-116,-115,-111,-93,63,-112,-86,-98,-81,-76,-110,-113,-114,-104,-95,-103,-102,-89,-96,-97,-94,-106,-77,-75,-101,-83,-82,-85,-84,-90,-92,-91,-88,-87,63,63,-99,-100,]),'ASSIGN_OP':([1,3,5,8,9,12,13,15,17,19,24,25,27,28,29,30,32,34,48,58,59,73,74,75,76,78,87,88,97,122,125,126,127,128,129,130,131,133,134,135,136,142,163,164,181,193,],[-105,43,-109,-74,-116,-115,-111,-93,-78,-112,-86,-98,-81,-76,-110,-113,-114,-104,-95,-103,-102,-89,-96,-97,-94,-106,-77,-75,146,-101,-83,-82,-85,-84,-90,-92,-91,-88,-87,-79,-80,-15,-99,-100,-16,-17,]),'STR_ID':([0,1,2,3,5,6,7,8,9,10,12,13,15,17,18,19,20,21,23,24,25,26,27,28,29,30,31,32,33,34,35,40,41,42,43,44,45,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63,65,66,67,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,91,93,94,95,96,99,100,101,106,109,111,112,113,116,117,118,122,125,126,127,128,129,130,131,132,133,134,135,136,141,144,145,146,147,149,150,152,153,156,157,160,161,162,163,164,165,178,179,182,184,190,192,196,197,198,199,200,201,203,206,207,209,212,214,216,217,218,219,],[19,-105,19,-89,-109,19,19,-74,-116,-62,-115,-111,-93,-78,-7,-112,-6,-69,19,-86,-98,19,-81,-76,-110,-113,19,-114,19,-104,19,19,19,19,19,19,19,-95,19,19,19,19,-23,-24,19,19,-103,-102,19,19,19,19,19,19,19,19,19,19,19,-89,-96,-97,-94,19,-106,19,-68,-66,-67,-63,-65,-64,-70,-77,-75,-30,-33,-39,19,19,19,-29,-31,19,19,-44,-9,-34,19,-32,19,-101,-83,-82,-85,-84,-90,-92,-91,19,-88,-87,-79,-80,-8,-9,19,19,-38,19,-53,19,19,19,-54,-44,19,-37,-99,-100,19,19,-55,-36,19,19,-5,19,19,-35,19,19,19,19,-50,-49,-46,19,19,-52,-47,19,-51,]),'VAR':([0,1,3,5,6,8,9,10,12,13,15,17,18,19,20,21,23,24,25,27,28,29,30,32,34,48,52,53,54,55,58,59,73,74,75,76,78,80,81,82,83,84,85,86,87,88,91,93,94,96,100,101,106,111,112,113,117,118,122,125,126,127,128,129,130,131,133,134,135,136,140,141,144,147,150,157,160,162,163,164,171,179,182,192,198,206,207,209,216,217,219,],[26,-105,-89,-109,26,-74,-116,-62,-115,-111,-93,-78,-7,-112,-6,-69,26,-86,-98,-81,-76,-110,-113,-114,-104,-95,26,95,-23,-24,-103,-102,-89,-96,-97,-94,-106,-68,-66,-67,-63,-65,-64,-70,-77,-75,-30,-33,-39,95,-29,-31,95,-44,-9,-34,-32,95,-101,-83,-82,-85,-84,-90,-92,-91,-88,-87,-79,-80,95,-8,-9,-38,-53,-54,-44,-37,-99,-100,95,-55,-36,-5,-35,-50,-49,-46,-52,-47,-51,]),'MIN_ASSIGN':([1,3,5,8,9,12,13,15,17,19,24,25,27,28,29,30,32,34,48,58,59,73,74,75,76,78,87,88,122,125,126,127,128,129,130,131,133,134,135,136,163,164,],[-105,44,-109,-74,-116,-115,-111,-93,-78,-112,-86,-98,-81,-76,-110,-113,-114,-104,-95,-103,-102,-89,-96,-97,-94,-106,-77,-75,-101,-83,-82,-85,-84,-90,-92,-91,-88,-87,-79,-80,-99,-100,]),'EQ':([1,3,5,8,9,12,13,15,17,19,24,25,27,28,29,30,32,34,48,58,59,73,74,75,76,78,87,88,122,125,126,127,128,129,130,131,133,134,135,136,163,164,],[-105,-89,-109,-74,-116,-115,-111,-93,-78,-112,-86,-98,-81,71,-110,-113,-114,-104,-95,-103,-102,-89,-96,-97,-94,-106,71,-75,-101,-83,-82,-85,-84,-90,-92,-91,-88,-87,-79,-80,-99,-100,]),'IF':([53,91,93,94,96,100,101,111,112,113,116,117,118,141,144,147,150,152,157,160,162,179,182,184,197,198,199,201,206,207,209,214,216,217,218,219,],[119,-30,-33,-39,119,-29,-31,-44,-9,-34,119,-32,119,-8,-9,-38,-53,119,-54,-44,-37,-55,-36,119,119,-35,119,119,-50,-49,-46,119,-52,-47,119,-51,]),'AND':([1,3,5,8,9,12,13,15,17,19,24,25,27,28,29,30,32,34,48,58,59,73,74,75,76,78,87,88,122,125,126,127,128,129,130,131,133,134,135,136,163,164,],[-105,-89,-109,49,-116,-115,-111,-93,-78,-112,-86,-98,-81,-76,-110,-113,-114,-104,-95,-103,-102,-89,-96,-97,-94,-106,-77,-75,-101,-83,-82,-85,-84,-90,-92,-91,-88,-87,-79,-80,-99,-100,]),'MOD_ASSIGN':([1,3,5,8,9,12,13,15,17,19,24,25,27,28,29,30,32,34,48,58,59,73,74,75,76,78,87,88,122,125,126,127,128,129,130,131,133,134,135,136,163,164,],[-105,40,-109,-74,-116,-115,-111,-93,-78,-112,-86,-98,-81,-76,-110,-113,-114,-104,-95,-103,-102,-89,-96,-97,-94,-106,-77,-75,-101,-83,-82,-85,-84,-90,-92,-91,-88,-87,-79,-80,-99,-100,]),'INT_ID':([0,1,2,3,5,6,7,8,9,10,12,13,15,17,18,19,20,21,23,24,25,26,27,28,29,30,31,32,33,34,35,40,41,42,43,44,45,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63,65,66,67,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,91,93,94,95,96,99,100,101,106,109,111,112,113,116,117,118,122,125,126,127,128,129,130,131,132,133,134,135,136,141,144,145,146,147,149,150,152,153,156,157,160,161,162,163,164,165,178,179,182,184,190,192,196,197,198,199,200,201,203,206,207,209,212,214,216,217,218,219,],[29,-105,29,-89,-109,29,29,-74,-116,-62,-115,-111,-93,-78,-7,-112,-6,-69,29,-86,-98,29,-81,-76,-110,-113,29,-114,29,-104,29,29,29,29,29,29,29,-95,29,29,29,29,-23,-24,29,29,-103,-102,29,29,29,29,29,29,29,29,29,29,29,-89,-96,-97,-94,29,-106,29,-68,-66,-67,-63,-65,-64,-70,-77,-75,-30,-33,-39,29,29,29,-29,-31,29,29,-44,-9,-34,29,-32,29,-101,-83,-82,-85,-84,-90,-92,-91,29,-88,-87,-79,-80,-8,-9,29,29,-38,29,-53,29,29,29,-54,-44,29,-37,-99,-100,29,29,-55,-36,29,29,-5,29,29,-35,29,29,29,29,-50,-49,-46,29,29,-52,-47,29,-51,]),'FLOAT_LIT':([0,1,2,3,5,6,7,8,9,10,12,13,15,17,18,19,20,21,23,24,25,27,28,29,30,31,32,33,34,35,40,41,42,43,44,45,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63,65,66,67,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,91,93,94,96,99,100,101,106,109,111,112,113,116,117,118,122,125,126,127,128,129,130,131,133,134,135,136,141,144,145,146,147,149,150,152,153,156,157,160,161,162,163,164,165,178,179,182,184,192,196,197,198,199,200,201,203,206,207,209,212,214,216,217,218,219,],[30,-105,30,-89,-109,30,30,-74,-116,-62,-115,-111,-93,-78,-7,-112,-6,-69,30,-86,-98,-81,-76,-110,-113,30,-114,30,-104,30,30,30,30,30,30,30,-95,30,30,30,30,-23,-24,30,30,-103,-102,30,30,30,30,30,30,30,30,30,30,30,-89,-96,-97,-94,30,-106,30,-68,-66,-67,-63,-65,-64,-70,-77,-75,-30,-33,-39,30,30,-29,-31,30,30,-44,-9,-34,30,-32,30,-101,-83,-82,-85,-84,-90,-92,-91,-88,-87,-79,-80,-8,-9,30,30,-38,30,-53,30,30,30,-54,-44,30,-37,-99,-100,30,30,-55,-36,30,-5,30,30,-35,30,30,30,30,-50,-49,-46,30,30,-52,-47,30,-51,]),'SUB_OP':([0,1,2,3,5,6,7,8,9,10,12,13,15,17,18,19,20,21,23,24,25,27,28,29,30,31,32,33,34,35,40,41,42,43,44,45,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63,65,66,67,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,91,93,94,96,99,100,101,106,109,111,112,113,116,117,118,122,125,126,127,128,129,130,131,133,134,135,136,141,144,145,146,147,149,150,152,153,156,157,160,161,162,163,164,165,178,179,182,184,192,196,197,198,199,200,201,203,206,207,209,212,214,216,217,218,219,],[31,-105,31,-89,-109,31,31,-74,-116,-62,-115,-111,-93,-78,-7,-112,-6,-69,31,-86,-98,69,-76,-110,-113,31,-114,31,-104,31,31,31,31,31,31,31,-95,31,31,31,31,-23,-24,31,31,-103,-102,31,31,31,31,31,31,31,31,31,31,31,-89,69,-97,-94,31,-106,31,-68,-66,-67,-63,-65,-64,-70,-77,-75,-30,-33,-39,31,31,-29,-31,31,31,-44,-9,-34,31,-32,31,-101,69,69,69,69,-90,-92,-91,-88,-87,-79,-80,-8,-9,31,31,-38,31,-53,31,31,31,-54,-44,31,-37,-99,-100,31,31,-55,-36,31,-5,31,31,-35,31,31,31,31,-50,-49,-46,31,31,-52,-47,31,-51,]),'ADD_ASSIGN':([1,3,5,8,9,12,13,15,17,19,24,25,27,28,29,30,32,34,48,58,59,73,74,75,76,78,87,88,122,125,126,127,128,129,130,131,133,134,135,136,163,164,],[-105,45,-109,-74,-116,-115,-111,-93,-78,-112,-86,-98,-81,-76,-110,-113,-114,-104,-95,-103,-102,-89,-96,-97,-94,-106,-77,-75,-101,-83,-82,-85,-84,-90,-92,-91,-88,-87,-79,-80,-99,-100,]),'BREAK':([53,91,93,94,96,100,101,111,112,113,116,117,118,141,144,147,150,152,157,160,162,179,182,184,197,198,199,201,206,207,209,214,216,217,218,219,],[114,-30,-33,-39,114,-29,-31,-44,-9,-34,114,-32,114,-8,-9,-38,-53,114,-54,-44,-37,-55,-36,114,114,-35,114,114,-50,-49,-46,114,-52,-47,114,-51,]),'INT_LIT':([0,1,2,3,5,6,7,8,9,10,12,13,15,17,18,19,20,21,23,24,25,27,28,29,30,31,32,33,34,35,40,41,42,43,44,45,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63,65,66,67,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,91,93,94,96,99,100,101,106,109,111,112,113,116,117,118,122,125,126,127,128,129,130,131,133,134,135,136,141,144,145,146,147,149,150,152,153,156,157,160,161,162,163,164,165,178,179,182,184,192,196,197,198,199,200,201,203,206,207,209,212,214,216,217,218,219,],[32,-105,32,-89,-109,32,32,-74,-116,-62,-115,-111,-93,-78,-7,-112,-6,-69,32,-86,-98,-81,-76,-110,-113,32,-114,32,-104,32,32,32,32,32,32,32,-95,32,32,32,32,-23,-24,32,32,-103,-102,32,32,32,32,32,32,32,32,32,32,32,-89,-96,-97,-94,32,-106,32,-68,-66,-67,-63,-65,-64,-70,-77,-75,-30,-33,-39,32,32,-29,-31,32,32,-44,-9,-34,32,-32,32,-101,-83,-82,-85,-84,-90,-92,-91,-88,-87,-79,-80,-8,-9,32,32,-38,32,-53,32,32,32,-54,-44,32,-37,-99,-100,32,32,-55,-36,32,-5,32,32,-35,32,32,32,32,-50,-49,-46,32,32,-52,-47,32,-51,]),'CONTINUE':([53,91,93,94,96,100,101,111,112,113,116,117,118,141,144,147,150,152,157,160,162,179,182,184,197,198,199,201,206,207,209,214,216,217,218,219,],[104,-30,-33,-39,104,-29,-31,-44,-9,-34,104,-32,104,-8,-9,-38,-53,104,-54,-44,-37,-55,-36,104,104,-35,104,104,-50,-49,-46,104,-52,-47,104,-51,]),'MUL_ASSIGN':([1,3,5,8,9,12,13,15,17,19,24,25,27,28,29,30,32,34,48,58,59,73,74,75,76,78,87,88,122,125,126,127,128,129,130,131,133,134,135,136,163,164,],[-105,41,-109,-74,-116,-115,-111,-93,-78,-112,-86,-98,-81,-76,-110,-113,-114,-104,-95,-103,-102,-89,-96,-97,-94,-106,-77,-75,-101,-83,-82,-85,-84,-90,-92,-91,-88,-87,-79,-80,-99,-100,]),'NOT':([0,1,2,3,5,6,7,8,9,10,12,13,15,17,18,19,20,21,23,24,25,27,28,29,30,31,32,33,34,35,40,41,42,43,44,45,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63,65,66,67,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,91,93,94,96,99,100,101,106,109,111,112,113,116,117,118,122,125,126,127,128,129,130,131,133,134,135,136,141,144,145,146,147,149,150,152,153,156,157,160,161,162,163,164,165,178,179,182,184,192,196,197,198,199,200,201,203,206,207,209,212,214,216,217,218,219,],[33,-105,33,-89,-109,33,33,-74,-116,-62,-115,-111,-93,-78,-7,-112,-6,-69,33,-86,-98,-81,-76,-110,-113,33,-114,33,-104,33,33,33,33,33,33,33,-95,33,33,33,33,-23,-24,33,33,-103,-102,33,33,33,33,33,33,33,33,33,33,33,-89,-96,-97,-94,33,-106,33,-68,-66,-67,-63,-65,-64,-70,-77,-75,-30,-33,-39,33,33,-29,-31,33,33,-44,-9,-34,33,-32,33,-101,-83,-82,-85,-84,-90,-92,-91,-88,-87,-79,-80,-8,-9,33,33,-38,33,-53,33,33,33,-54,-44,33,-37,-99,-100,33,33,-55,-36,33,-5,33,33,-35,33,33,33,33,-50,-49,-46,33,33,-52,-47,33,-51,]),'RBRACKET':([1,3,5,8,9,10,12,13,15,17,19,21,24,25,27,28,29,30,32,34,37,38,48,58,59,73,74,75,76,78,80,81,82,83,84,85,86,87,88,121,122,125,126,127,128,129,130,131,133,134,135,136,138,145,154,163,164,169,173,174,175,],[-105,-89,-109,-74,-116,-62,-115,-111,-93,-78,-112,-69,-86,-98,-81,-76,-110,-113,-114,-104,-60,-58,-95,-103,-102,-89,-96,-97,-94,-106,-68,-66,-67,-63,-65,-64,-70,-77,-75,163,-101,-83,-82,-85,-84,-90,-92,-91,-88,-87,-79,-80,-59,-117,-73,-99,-100,-61,-71,193,-72,]),'MAIN':([0,1,3,5,6,8,9,10,11,12,13,15,17,18,19,20,21,22,23,24,25,27,28,29,30,32,34,47,48,54,55,58,59,64,73,74,75,76,78,80,81,82,83,84,85,86,87,88,94,122,125,126,127,128,129,130,131,133,134,135,136,147,163,164,],[-117,-105,-89,-109,-117,-74,-116,-62,51,-115,-111,-93,-78,-7,-112,-6,-69,-4,-117,-86,-98,-81,-76,-110,-113,-114,-104,-3,-95,-23,-24,-103,-102,-2,-89,-96,-97,-94,-106,-68,-66,-67,-63,-65,-64,-70,-77,-75,-39,-101,-83,-82,-85,-84,-90,-92,-91,-88,-87,-79,-80,-38,-99,-100,]),'MOD_OP':([1,3,5,8,9,12,13,15,17,19,24,25,27,28,29,30,32,34,48,58,59,73,74,75,76,78,87,88,122,125,126,127,128,129,130,131,133,134,135,136,163,164,],[-105,-89,-109,-74,-116,-115,-111,-93,-78,-112,66,-98,-81,-76,-110,-113,-114,-104,-95,-103,-102,-89,-96,-97,-94,-106,-77,-75,-101,-83,-82,-85,-84,-90,-92,-91,66,66,-79,-80,-99,-100,]),'OR':([1,3,5,8,9,12,13,15,17,19,24,25,27,28,29,30,32,34,48,58,59,73,74,75,76,78,87,88,122,125,126,127,128,129,130,131,133,134,135,136,163,164,],[-105,-89,-109,50,-116,-115,-111,-93,-78,-112,-86,-98,-81,-76,-110,-113,-114,-104,-95,-103,-102,-89,-96,-97,-94,-106,-77,-75,-101,-83,-82,-85,-84,-90,-92,-91,-88,-87,-79,-80,-99,-100,]),'INC':([0,1,2,3,5,6,7,8,9,10,12,13,15,17,18,19,20,21,23,24,25,27,28,29,30,31,32,33,34,35,40,41,42,43,44,45,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63,65,66,67,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,91,93,94,96,99,100,101,106,109,111,112,113,116,117,118,122,125,126,127,128,129,130,131,133,134,135,136,141,144,145,146,147,149,150,152,153,156,157,160,161,162,163,164,165,178,179,182,184,192,196,197,198,199,200,201,203,206,207,209,212,214,216,217,218,219,],[35,-105,35,-89,-109,35,35,-74,-116,-62,-115,-111,59,-78,-7,-112,-6,-69,35,-86,-98,-81,-76,-110,-113,35,-114,35,-104,35,35,35,35,35,35,35,-95,35,35,35,35,-23,-24,35,35,-103,-102,35,35,35,35,35,35,35,35,35,35,35,-89,-96,-97,-94,35,-106,35,-68,-66,-67,-63,-65,-64,-70,-77,-75,-30,-33,-39,35,35,-29,-31,35,35,-44,-9,-34,35,-32,35,-101,-83,-82,-85,-84,-90,-92,-91,-88,-87,-79,-80,-8,-9,35,35,-38,35,-53,35,35,35,-54,-44,35,-37,-99,-100,35,35,-55,-36,35,-5,35,35,-35,35,35,35,35,-50,-49,-46,35,35,-52,-47,35,-51,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression_statement':([53,96,116,118,152,184,197,199,201,214,218,],[91,91,91,91,91,91,91,91,91,91,91,]),'constant':([0,2,6,7,23,31,33,35,40,41,42,43,44,45,49,50,52,53,56,57,60,61,62,63,65,66,67,69,70,71,72,77,79,96,99,106,109,116,118,145,146,149,152,153,156,161,165,178,184,196,197,199,200,201,203,212,214,218,],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,]),'unary_expression':([0,2,6,7,23,31,33,35,40,41,42,43,44,45,49,50,52,53,56,57,60,61,62,63,65,66,67,69,70,71,72,77,79,96,99,106,109,116,118,145,146,149,152,153,156,161,165,178,184,196,197,199,200,201,203,212,214,218,],[3,3,3,48,3,73,73,76,3,3,3,3,3,3,73,73,3,3,3,3,73,73,73,73,129,130,131,73,73,73,73,73,3,3,3,3,73,3,3,73,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,]),'init_declarator_list':([53,96,118,],[92,92,92,]),'fxn_var_statement':([0,6,23,52,],[6,6,6,6,]),'fxn_prot_args':([132,190,],[166,202,]),'iteration_statement':([53,96,116,118,152,184,197,199,201,214,218,],[93,93,93,93,93,93,93,93,93,93,93,]),'scan_expression':([0,2,6,23,40,41,42,43,44,45,52,53,56,57,79,96,99,106,116,118,146,149,152,153,156,161,165,178,184,196,197,199,200,201,203,212,214,218,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'external_declaration':([0,6,23,52,],[11,47,64,90,]),'fxn_declaration':([0,6,23,52,],[14,14,14,14,]),'compound_statement':([14,53,96,116,118,152,170,184,197,199,201,214,218,],[55,101,101,101,101,101,192,101,101,101,101,101,101,]),'selection_statement':([53,96,116,118,152,184,197,199,201,214,218,],[117,117,117,117,117,117,117,117,117,117,117,]),'postfix_expression':([0,2,6,7,23,31,33,35,40,41,42,43,44,45,49,50,52,53,56,57,60,61,62,63,65,66,67,69,70,71,72,77,79,96,99,106,109,116,118,145,146,149,152,153,156,161,165,178,184,196,197,199,200,201,203,212,214,218,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'start':([0,],[16,]),'relational_expression':([0,2,6,23,33,40,41,42,43,44,45,49,50,52,53,56,57,71,72,77,79,96,99,106,109,116,118,145,146,149,152,153,156,161,165,178,184,196,197,199,200,201,203,212,214,218,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,135,136,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'fxn_definition':([0,6,23,52,],[18,18,18,18,]),'main':([11,],[52,]),'fxn_prot':([0,6,23,52,],[20,20,20,20,]),'logical_or_expression':([0,2,6,23,33,40,41,42,43,44,45,50,52,53,56,57,77,79,96,99,106,109,116,118,145,146,149,152,153,156,161,165,178,184,196,197,199,200,201,203,212,214,218,],[21,21,21,21,75,21,21,21,21,21,21,88,21,21,21,21,137,21,21,21,21,154,21,21,154,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'empty':([0,6,23,52,53,89,96,99,116,118,132,145,149,152,184,196,197,199,201,212,214,218,],[22,22,22,22,115,139,115,115,115,115,168,173,115,115,115,115,115,115,115,115,115,115,]),'assignment_expression':([0,2,6,23,40,41,42,43,44,45,52,53,56,57,79,96,99,106,116,118,146,149,152,153,156,161,165,178,184,196,197,199,200,201,203,212,214,218,],[23,37,23,23,80,81,82,83,84,85,23,37,37,123,37,37,37,37,37,37,177,37,37,37,37,37,188,177,37,37,37,37,37,37,177,37,37,37,]),'declarator':([53,96,106,118,140,171,],[97,97,151,97,97,151,]),'argument_expression_list':([57,],[124,]),'print_expression':([2,53,56,79,96,99,106,116,118,149,152,153,156,161,184,196,197,199,200,201,212,214,218,],[38,38,38,138,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'statement_list':([53,96,118,],[118,118,118,]),'expression_opt':([53,96,99,116,118,149,152,184,196,197,199,201,212,214,218,],[120,120,148,120,120,180,120,120,205,120,120,120,215,120,120,]),'primary_expression':([0,2,6,7,23,31,33,35,40,41,42,43,44,45,49,50,52,53,56,57,60,61,62,63,65,66,67,69,70,71,72,77,79,96,99,106,109,116,118,145,146,149,152,153,156,161,165,178,184,196,197,199,200,201,203,212,214,218,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'declaration':([53,96,118,],[112,144,112,]),'logical_and_expression':([0,2,6,23,33,40,41,42,43,44,45,50,52,53,56,57,77,79,96,99,106,109,116,118,145,146,149,152,153,156,161,165,178,184,196,197,199,200,201,203,212,214,218,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'initializer':([146,178,203,],[176,194,210,]),'add_expression':([0,2,6,23,31,33,40,41,42,43,44,45,49,50,52,53,56,57,60,61,62,63,71,72,77,79,96,99,106,109,116,118,145,146,149,152,153,156,161,165,178,184,196,197,199,200,201,203,212,214,218,],[27,27,27,27,74,27,27,27,27,27,27,27,27,27,27,27,27,27,125,126,127,128,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'equality_expression':([0,2,6,23,33,40,41,42,43,44,45,49,50,52,53,56,57,77,79,96,99,106,109,116,118,145,146,149,152,153,156,161,165,178,184,196,197,199,200,201,203,212,214,218,],[28,28,28,28,28,28,28,28,28,28,28,87,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'jump_statement':([53,96,116,118,152,184,197,199,201,214,218,],[113,113,113,113,113,113,113,113,113,113,113,]),'constant_expression_opt':([145,],[174,]),'labeled_statement':([53,96,116,118,152,184,197,199,201,214,218,],[100,100,100,100,100,100,100,100,100,100,100,]),'declaration_list':([53,96,118,],[96,96,96,]),'statement':([53,96,116,118,152,184,197,199,201,214,218,],[111,111,158,160,182,198,206,207,209,217,219,]),'constant_expression':([109,145,],[155,175,]),'initializer_list':([178,],[195,]),'init_declarator':([53,96,118,140,],[103,103,103,172,]),'mult_expression':([0,2,6,23,31,33,40,41,42,43,44,45,49,50,52,53,56,57,60,61,62,63,69,70,71,72,77,79,96,99,106,109,116,118,145,146,149,152,153,156,161,165,178,184,196,197,199,200,201,203,212,214,218,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,133,134,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'mix_list':([53,96,118,],[98,143,159,]),'identifier':([0,2,6,7,23,26,31,33,35,40,41,42,43,44,45,49,50,52,53,56,57,60,61,62,63,65,66,67,69,70,71,72,77,79,95,96,99,106,109,116,118,132,145,146,149,152,153,156,161,165,178,184,190,196,197,199,200,201,203,212,214,218,],[34,34,34,34,34,68,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,142,34,34,34,34,34,34,167,34,34,34,34,34,34,34,34,34,34,167,34,34,34,34,34,34,34,34,34,]),'expression':([2,53,56,96,99,106,116,118,149,152,153,156,161,184,196,197,199,200,201,212,214,218,],[39,105,121,105,105,39,105,105,105,105,183,185,187,105,105,105,105,208,105,105,105,105,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> external_declaration main external_declaration','start',3,'p_start','parser.py',69),
  ('external_declaration -> assignment_expression external_declaration','external_declaration',2,'p_external_declaration_1','parser.py',75),
  ('external_declaration -> fxn_var_statement external_declaration','external_declaration',2,'p_external_declaration_1','parser.py',76),
  ('external_declaration -> empty','external_declaration',1,'p_external_declaration_3','parser.py',81),
  ('main -> MAIN LPAREN empty RPAREN compound_statement','main',5,'p_main','parser.py',85),
  ('fxn_var_statement -> fxn_prot','fxn_var_statement',1,'p_fxn_var_statement_1','parser.py',90),
  ('fxn_var_statement -> fxn_definition','fxn_var_statement',1,'p_fxn_var_statement_1','parser.py',91),
  ('declaration -> init_declarator_list SEMI','declaration',2,'p_declaration','parser.py',96),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list_1','parser.py',100),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list_2','parser.py',104),
  ('init_declarator_list -> init_declarator','init_declarator_list',1,'p_init_declarator_list_1','parser.py',108),
  ('init_declarator_list -> init_declarator_list COMMA init_declarator','init_declarator_list',3,'p_init_declaration_list_2','parser.py',112),
  ('init_declarator -> declarator','init_declarator',1,'p_init_declarator_1','parser.py',116),
  ('init_declarator -> declarator ASSIGN_OP initializer','init_declarator',3,'p_init_declarator_2','parser.py',121),
  ('declarator -> VAR identifier','declarator',2,'p_declarator_1','parser.py',127),
  ('declarator -> LPAREN declarator RPAREN','declarator',3,'p_declarator_5','parser.py',132),
  ('declarator -> declarator LBRACKET constant_expression_opt RBRACKET','declarator',4,'p_declarator_6','parser.py',137),
  ('initializer -> assignment_expression','initializer',1,'p_initializer_1','parser.py',141),
  ('initializer -> LBRACE initializer_list RBRACE','initializer',3,'p_initializer_2','parser.py',147),
  ('initializer -> LBRACE initializer_list COMMA RBRACE','initializer',4,'p_initializer_2','parser.py',148),
  ('initializer_list -> initializer','initializer_list',1,'p_initializer_list_1','parser.py',154),
  ('initializer_list -> initializer_list COMMA initializer','initializer_list',3,'p_initializer_list_2','parser.py',158),
  ('fxn_prot -> fxn_declaration SEMI','fxn_prot',2,'p_fxn_prot','parser.py',162),
  ('fxn_definition -> fxn_declaration compound_statement','fxn_definition',2,'p_fxn_definition','parser.py',166),
  ('fxn_declaration -> VAR identifier LPAREN fxn_prot_args RPAREN','fxn_declaration',5,'p_fxn_declaration_1','parser.py',170),
  ('fxn_declaration -> VAR identifier LPAREN empty RPAREN','fxn_declaration',5,'p_fxn_declaration_2','parser.py',174),
  ('fxn_prot_args -> identifier COMMA fxn_prot_args','fxn_prot_args',3,'p_fxn_prot_args_1','parser.py',178),
  ('fxn_prot_args -> identifier','fxn_prot_args',1,'p_fxn_prot_args_2','parser.py',182),
  ('statement -> labeled_statement','statement',1,'p_statement','parser.py',188),
  ('statement -> expression_statement','statement',1,'p_statement','parser.py',189),
  ('statement -> compound_statement','statement',1,'p_statement','parser.py',190),
  ('statement -> selection_statement','statement',1,'p_statement','parser.py',191),
  ('statement -> iteration_statement','statement',1,'p_statement','parser.py',192),
  ('statement -> jump_statement','statement',1,'p_statement','parser.py',193),
  ('labeled_statement -> CASE constant_expression COLON statement','labeled_statement',4,'p_labeled_statement_1','parser.py',199),
  ('labeled_statement -> DEFAULT COLON statement','labeled_statement',3,'p_labeled_statement_2','parser.py',203),
  ('expression_statement -> expression_opt SEMI','expression_statement',2,'p_expression_statement','parser.py',207),
  ('compound_statement -> LBRACE mix_list RBRACE','compound_statement',3,'p_compound_statement_1','parser.py',211),
  ('compound_statement -> LBRACE RBRACE','compound_statement',2,'p_compund_statement_4','parser.py',215),
  ('mix_list -> statement_list','mix_list',1,'p_mix_list_1','parser.py',220),
  ('mix_list -> declaration_list','mix_list',1,'p_mix_list_1','parser.py',221),
  ('mix_list -> statement_list mix_list','mix_list',2,'p_mix_list_2','parser.py',227),
  ('mix_list -> declaration_list mix_list','mix_list',2,'p_mix_list_2','parser.py',228),
  ('statement_list -> statement','statement_list',1,'p_statement_list_1','parser.py',233),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list_2','parser.py',237),
  ('selection_statement -> IF LPAREN expression RPAREN statement','selection_statement',5,'p_selection_statement_1','parser.py',247),
  ('selection_statement -> IF LPAREN expression RPAREN statement ELSE statement','selection_statement',7,'p_selection_statement_2','parser.py',251),
  ('else_if_statement -> empty','else_if_statement',1,'p_else_if_statement_2','parser.py',255),
  ('selection_statement -> SWITCH LPAREN expression RPAREN statement','selection_statement',5,'p_selection_statement_3','parser.py',259),
  ('iteration_statement -> WHILE LPAREN expression RPAREN statement','iteration_statement',5,'p_iteration_statement_1','parser.py',264),
  ('iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement','iteration_statement',9,'p_iteration_statement_2','parser.py',268),
  ('iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMI','iteration_statement',7,'p_iteration_statement_3','parser.py',272),
  ('jump_statement -> CONTINUE SEMI','jump_statement',2,'p_jump_statement_1','parser.py',277),
  ('jump_statement -> BREAK SEMI','jump_statement',2,'p_jump_statement_1','parser.py',278),
  ('jump_statement -> RETURN expression_opt SEMI','jump_statement',3,'p_jump_statement_3','parser.py',283),
  ('expression_opt -> empty','expression_opt',1,'p_expression_opt_1','parser.py',287),
  ('expression_opt -> expression','expression_opt',1,'p_expression_opt_2','parser.py',291),
  ('expression -> print_expression','expression',1,'p_expression_1','parser.py',295),
  ('expression -> expression COMMA print_expression','expression',3,'p_expression_2','parser.py',299),
  ('print_expression -> assignment_expression','print_expression',1,'p_print_expression_1','parser.py',303),
  ('print_expression -> PRINT LPAREN logical_or_expression RPAREN','print_expression',4,'p_print_expression_2','parser.py',307),
  ('assignment_expression -> scan_expression','assignment_expression',1,'p_assignment_expression_1','parser.py',311),
  ('assignment_expression -> unary_expression ASSIGN_OP assignment_expression','assignment_expression',3,'p_assignment_expression_2','parser.py',316),
  ('assignment_expression -> unary_expression ADD_ASSIGN assignment_expression','assignment_expression',3,'p_assignment_expression_2','parser.py',317),
  ('assignment_expression -> unary_expression MIN_ASSIGN assignment_expression','assignment_expression',3,'p_assignment_expression_2','parser.py',318),
  ('assignment_expression -> unary_expression MUL_ASSIGN assignment_expression','assignment_expression',3,'p_assignment_expression_2','parser.py',319),
  ('assignment_expression -> unary_expression DIV_ASSIGN assignment_expression','assignment_expression',3,'p_assignment_expression_2','parser.py',320),
  ('assignment_expression -> unary_expression MOD_ASSIGN assignment_expression','assignment_expression',3,'p_assignment_expression_2','parser.py',321),
  ('scan_expression -> logical_or_expression','scan_expression',1,'p_scan_expression_1','parser.py',326),
  ('scan_expression -> SCAN LPAREN RPAREN','scan_expression',3,'p_scan_expression_2','parser.py',330),
  ('constant_expression_opt -> empty','constant_expression_opt',1,'p_constant_expression_opt_1','parser.py',334),
  ('constant_expression_opt -> constant_expression','constant_expression_opt',1,'p_constant_expression_opt_2','parser.py',338),
  ('constant_expression -> logical_or_expression','constant_expression',1,'p_constant_expression','parser.py',342),
  ('logical_or_expression -> logical_and_expression','logical_or_expression',1,'p_logical_or_expression_1','parser.py',346),
  ('logical_or_expression -> logical_and_expression OR logical_or_expression','logical_or_expression',3,'p_logical_or_expression_2','parser.py',350),
  ('logical_and_expression -> equality_expression','logical_and_expression',1,'p_logical_and_expression_1','parser.py',354),
  ('logical_and_expression -> logical_and_expression AND equality_expression','logical_and_expression',3,'p_logical_and_expression_2','parser.py',358),
  ('equality_expression -> relational_expression','equality_expression',1,'p_equality_expression_1','parser.py',362),
  ('equality_expression -> equality_expression EQ relational_expression','equality_expression',3,'p_equality_expression_2','parser.py',367),
  ('equality_expression -> equality_expression NEQ relational_expression','equality_expression',3,'p_equality_expression_2','parser.py',368),
  ('relational_expression -> add_expression','relational_expression',1,'p_relational_expression_1','parser.py',373),
  ('relational_expression -> relational_expression LT add_expression','relational_expression',3,'p_relational_expression_2','parser.py',378),
  ('relational_expression -> relational_expression GT add_expression','relational_expression',3,'p_relational_expression_2','parser.py',379),
  ('relational_expression -> relational_expression LE add_expression','relational_expression',3,'p_relational_expression_2','parser.py',380),
  ('relational_expression -> relational_expression GE add_expression','relational_expression',3,'p_relational_expression_2','parser.py',381),
  ('add_expression -> mult_expression','add_expression',1,'p_add_expression_1','parser.py',386),
  ('add_expression -> add_expression ADD_OP mult_expression','add_expression',3,'p_add_expression_2','parser.py',391),
  ('add_expression -> add_expression SUB_OP mult_expression','add_expression',3,'p_add_expression_2','parser.py',392),
  ('mult_expression -> unary_expression','mult_expression',1,'p_mult_expression_1','parser.py',398),
  ('mult_expression -> mult_expression MULT_OP unary_expression','mult_expression',3,'p_mult_expression_2','parser.py',403),
  ('mult_expression -> mult_expression DIV_OP unary_expression','mult_expression',3,'p_mult_expression_2','parser.py',404),
  ('mult_expression -> mult_expression MOD_OP unary_expression','mult_expression',3,'p_mult_expression_2','parser.py',405),
  ('unary_expression -> postfix_expression','unary_expression',1,'p_unary_expression_1','parser.py',411),
  ('unary_expression -> INC unary_expression','unary_expression',2,'p_unary_expression_2','parser.py',417),
  ('unary_expression -> DEC unary_expression','unary_expression',2,'p_unary_expression_2','parser.py',418),
  ('unary_expression -> SUB_OP add_expression','unary_expression',2,'p_unary_expression_2','parser.py',419),
  ('unary_expression -> NOT logical_or_expression','unary_expression',2,'p_unary_expression_2','parser.py',420),
  ('postfix_expression -> primary_expression','postfix_expression',1,'p_postfix_expression_1','parser.py',425),
  ('postfix_expression -> postfix_expression LBRACKET expression RBRACKET','postfix_expression',4,'p_postfix_expression_2','parser.py',429),
  ('postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN','postfix_expression',4,'p_postfix_expression_3','parser.py',434),
  ('postfix_expression -> postfix_expression LPAREN RPAREN','postfix_expression',3,'p_postfix_expression_4','parser.py',439),
  ('postfix_expression -> postfix_expression INC','postfix_expression',2,'p_postfix_expression_5','parser.py',444),
  ('postfix_expression -> postfix_expression DEC','postfix_expression',2,'p_postfix_expression_5','parser.py',445),
  ('primary_expression -> identifier','primary_expression',1,'p_primary_expression_1','parser.py',450),
  ('primary_expression -> constant','primary_expression',1,'p_primary_expression_2','parser.py',454),
  ('primary_expression -> LPAREN expression RPAREN','primary_expression',3,'p_primary_expression_3','parser.py',458),
  ('argument_expression_list -> assignment_expression','argument_expression_list',1,'p_argument_expression_list_1','parser.py',462),
  ('argument_expression_list -> argument_expression_list COMMA assignment_expression','argument_expression_list',3,'p_argument_expression_list_2','parser.py',467),
  ('identifier -> FLOAT_ID','identifier',1,'p_identifier_1','parser.py',471),
  ('identifier -> INT_ID','identifier',1,'p_identifier_2','parser.py',475),
  ('identifier -> CHAR_ID','identifier',1,'p_identifier_3','parser.py',479),
  ('identifier -> STR_ID','identifier',1,'p_identifier_4','parser.py',483),
  ('constant -> FLOAT_LIT','constant',1,'p_constant','parser.py',487),
  ('constant -> INT_LIT','constant',1,'p_constant_2','parser.py',491),
  ('constant -> CHAR_LIT','constant',1,'p_constant_3','parser.py',495),
  ('constant -> STR_LIT','constant',1,'p_constant_4','parser.py',499),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',503),
]
